{"ast":null,"code":"var _jsxFileName = \"/home/edison/react_projects/ros-app/src/components/ros-graph/ButtonPanel.js\";\nimport * as React from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport ROSLIB from 'roslib';\nimport UUID from 'uuid/v4';\nimport * as RosGraph from '../lib/RosGraph';\nimport Publisher from '../components/ros-graph/Publisher.js';\nimport Subscriber from '../components/ros-graph/Subscriber.js';\n\nfunction CreateSubscriberButton(props) {\n  const id = UUID();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactTooltip, {\n    effect: \"solid\",\n    place: \"right\",\n    type: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-tip\": \"Subscribe to \" + props.node.path,\n    className: \"SmallButton ColorTwo\",\n    onClick: () => {\n      props.addWidget(id, /*#__PURE__*/React.createElement(Subscriber, {\n        key: id,\n        ros: props.ros,\n        topic: props.node.path,\n        type: props.node.messageType,\n        onRequestClose: () => props.removeWidget(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }), props.node.path + \" subscriber\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Subscribe\"));\n}\n\nfunction CreatePublisherButton(props) {\n  const id = UUID();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactTooltip, {\n    effect: \"solid\",\n    place: \"right\",\n    type: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-tip\": \"Publish to \" + props.node.path,\n    className: \"SmallButton ColorThree\",\n    onClick: () => {\n      props.ros.getMessageDetails(props.node.messageType, details => {\n        props.addWidget(id, /*#__PURE__*/React.createElement(Publisher, {\n          key: id,\n          ros: props.ros,\n          details: details,\n          topic: props.node.path,\n          type: props.node.messageType,\n          onRequestClose: () => props.removeWidget(id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }\n        }), props.node.path + \" publisher\");\n      }, message => {\n        console.log(\"Message details failed\", this.props.type, message);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Publish\"));\n}\n\nfunction HideItemButton(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactTooltip, {\n    effect: \"solid\",\n    place: \"right\",\n    type: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-tip\": \"Hide \" + props.path,\n    className: \"SmallButton ColorOne\",\n    onClick: () => {\n      props.hideItem(props.path, props.type);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Hide\"));\n}\n\nfunction ButtonPanel(props) {\n  if (!props.node) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ButtonPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, props.children);\n  } // TODO: This will be replaced by widget registration somehow\n\n\n  var buttons = [];\n\n  switch (props.node.type) {\n    case \"topic\":\n      const topic = props.node;\n      buttons.push( /*#__PURE__*/React.createElement(CreatePublisherButton, {\n        key: \"publish_\" + topic.path,\n        ros: props.ros,\n        addWidget: props.addWidget,\n        removeWidget: props.removeWidget,\n        node: topic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 22\n        }\n      }));\n      buttons.push( /*#__PURE__*/React.createElement(CreateSubscriberButton, {\n        key: \"subscribe_\" + topic.path,\n        ros: props.ros,\n        addWidget: props.addWidget,\n        removeWidget: props.removeWidget,\n        node: topic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 22\n        }\n      }));\n      buttons.push( /*#__PURE__*/React.createElement(HideItemButton, {\n        key: \"hide_\" + topic.path,\n        hideItem: props.hideItem,\n        path: topic.path,\n        type: props.node.type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 22\n        }\n      }));\n      break;\n\n    case \"node\":\n      const node = props.node;\n      buttons.push( /*#__PURE__*/React.createElement(HideItemButton, {\n        key: \"hide_\" + node.path,\n        hideItem: props.hideItem,\n        path: node.path,\n        type: props.node.type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 20\n        }\n      }));\n      break;\n\n    case \"service\":\n      break;\n\n    case \"action\":\n      break;\n\n    default:\n      // console.log(\"No actions for type: \" + props.node.type);\n      return false;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ButtonPanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, buttons);\n}\n\nexport default ButtonPanel;","map":{"version":3,"sources":["/home/edison/react_projects/ros-app/src/components/ros-graph/ButtonPanel.js"],"names":["React","ReactTooltip","ROSLIB","UUID","RosGraph","Publisher","Subscriber","CreateSubscriberButton","props","id","node","path","addWidget","ros","messageType","removeWidget","CreatePublisherButton","getMessageDetails","details","message","console","log","type","HideItemButton","hideItem","ButtonPanel","children","buttons","topic","push"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport ROSLIB from 'roslib';\nimport UUID from 'uuid/v4';\n\nimport * as RosGraph from '../lib/RosGraph'\nimport Publisher from '../components/ros-graph/Publisher.js';\nimport Subscriber from '../components/ros-graph/Subscriber.js';\n\ntype TopicWidgetProps = {\n  addWidget: (id: string, element: React.Element<any>, name?: string) => void,\n  removeWidget: (id: string) => void,\n  node: RosGraph.Topic,\n  ros: ROSLIB.Ros,\n}\n\nfunction CreateSubscriberButton(props: TopicWidgetProps) {\n  const id = UUID();\n  return (\n    <div>\n      <ReactTooltip effect=\"solid\" place=\"right\" type=\"info\"/>\n      <div data-tip={\"Subscribe to \" + props.node.path} className=\"SmallButton ColorTwo\" onClick={() => {\n        props.addWidget(id, (\n          <Subscriber key={id} ros={props.ros} topic={props.node.path} type={props.node.messageType} onRequestClose={() => props.removeWidget(id)}/>\n        ), props.node.path + \" subscriber\")\n      }}>\n        Subscribe\n      </div>\n    </div>\n  )\n}\n\nfunction CreatePublisherButton(props: TopicWidgetProps) {\n  const id = UUID();\n  return (\n    <div>\n      <ReactTooltip effect=\"solid\" place=\"right\" type=\"info\"/>\n      <div data-tip={\"Publish to \" + props.node.path} className=\"SmallButton ColorThree\" onClick={() => {\n        props.ros.getMessageDetails(props.node.messageType, (details) => {\n          props.addWidget(id, (\n            <Publisher key={id} ros={props.ros} details={details} topic={props.node.path} type={props.node.messageType} onRequestClose={() => props.removeWidget(id)} />\n          ), props.node.path + \" publisher\")\n        }, (message) => {\n          console.log(\"Message details failed\", this.props.type, message)\n        })\n      }}>\n        Publish\n      </div>\n    </div>\n  )\n}\n\ntype HideProps = {\n  path: string,\n  type: string,\n  hideItem: (path: string, type: string) => void,\n}\n\nfunction HideItemButton(props: HideProps) {\n  return (\n    <div>\n      <ReactTooltip effect=\"solid\" place=\"right\" type=\"info\"/>\n      <div data-tip={\"Hide \" + props.path} className=\"SmallButton ColorOne\" onClick={() => {\n        props.hideItem(props.path, props.type)\n      }}>\n        Hide\n      </div>\n    </div>\n  )\n}\n\ntype Props = {\n  addWidget: (id: string, element: React.Element<any>, name?: string) => void,\n  removeWidget: (id: string) => void,\n  hideItem: (path: string, type: string) => void,\n  node: RosGraph.Primitive,\n  ros: ROSLIB.Ros,\n}\n\nfunction ButtonPanel(props: Props) {\n\n  if (!props.node) {\n    return (\n      <div className=\"ButtonPanel\">\n        {props.children}\n      </div>\n    )\n  }\n\n  // TODO: This will be replaced by widget registration somehow\n  var buttons = [];\n  switch (props.node.type) {\n    case \"topic\":\n        const topic: RosGraph.Topic = props.node\n        buttons.push(<CreatePublisherButton key={\"publish_\" + topic.path} ros={props.ros} addWidget={props.addWidget} removeWidget={props.removeWidget} node={topic} />)\n        buttons.push(<CreateSubscriberButton key={\"subscribe_\" + topic.path} ros={props.ros} addWidget={props.addWidget} removeWidget={props.removeWidget} node={topic} />)\n        buttons.push(<HideItemButton key={\"hide_\" + topic.path} hideItem={props.hideItem} path={topic.path} type={props.node.type} />)\n      break;\n    case \"node\":\n      const node: RosGraph.Node = props.node\n      buttons.push(<HideItemButton key={\"hide_\" + node.path} hideItem={props.hideItem} path={node.path} type={props.node.type} />)\n      break;\n    case \"service\":\n\n      break;\n    case \"action\":\n\n      break;\n    default:\n      // console.log(\"No actions for type: \" + props.node.type);\n      return false;\n  }\n\n  return (\n    <div className=\"ButtonPanel\">\n      {buttons}\n    </div>)\n\n}\nexport default ButtonPanel;\n"]},"metadata":{},"sourceType":"module"}