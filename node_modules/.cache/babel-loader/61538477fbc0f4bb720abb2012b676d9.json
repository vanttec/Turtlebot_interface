{"ast":null,"code":"var _jsxFileName = \"/home/edison/react_projects/ros-app/src/components/ros-graph.js\";\nimport * as React from 'react';\nimport ROSLIB from 'roslib';\nimport ButtonPanel from '../components/ros-graph/ButtonPanel.js';\nimport NodeGraph from '../components/ros-graph/NodeGraph';\nimport NodeList from '.../components/ros-graph/NodeList';\nimport * as RosGraph from '.../lib/RosGraph';\nimport RosGraphView from '.../lib/RosGraphView';\nimport \".../node_modules/react-grid-layout/css/styles.css\";\nimport \".../node_modules/react-resizable/css/styles.css\";\nimport '.../styles/Rosgraph.css';\n\nclass JViz extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      autoExpand: true,\n      layouts: {},\n      rosGraph: new RosGraph.RosGraph(),\n      view: new RosGraphView(),\n      widgets: []\n    };\n\n    this.updateRosGraph = () => {\n      RosGraph.GetRosGraph(this.props.ros).then(result => this.setState({\n        rosGraph: result\n      }));\n    };\n\n    this.setNodeActive = (treeNode, toggled = true) => {\n      this.setState({\n        view: this.state.view.setNodeActive(treeNode, toggled, this.state.rosGraph)\n      });\n    };\n\n    this.addWidget = (id, element) => {\n      console.log(\"Adding: \", id, element);\n      this.setState(prevState => ({\n        widgets: [...prevState.widgets, {\n          id: id,\n          element: element\n        }]\n      }));\n    };\n\n    this.removeWidget = id => {\n      console.log(\"Removing: \", id);\n      const widgets = this.state.widgets.filter(item => {\n        return item.id !== id;\n      });\n      this.setState({\n        widgets: widgets\n      });\n    };\n\n    this.handleSearch = event => {\n      this.setState({\n        view: this.state.view.searchFor(event.target.value)\n      });\n    };\n\n    this.handleSearchKey = event => {// if (event.keyCode === 27) {\n      //   this.setState({\n      //     view: this.state.view.searchFor(\"\"),\n      //   })\n      // }\n    };\n\n    this.hideItem = (path, type) => {\n      this.setState({\n        view: this.state.view.hideItem(path, type)\n      });\n    };\n\n    this.updateRosGraph();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"JViz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 5,\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"InputTextBox\",\n      onChange: this.handleSearch,\n      onKeyDown: this.handleSearchKey,\n      placeholder: \"Search...\",\n      value: this.state.view.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 54\n      }\n    })), /*#__PURE__*/React.createElement(NodeList, {\n      name: \"Node List\",\n      nodes: this.state.rosGraph.nodes,\n      view: this.state.view,\n      setNodeActive: this.setNodeActive,\n      type: \"node\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(NodeList, {\n      name: \"Topic List\",\n      nodes: this.state.rosGraph.topics,\n      view: this.state.view,\n      setNodeActive: this.setNodeActive,\n      type: \"topic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }), this.state.view.active ? /*#__PURE__*/React.createElement(ButtonPanel, {\n      ros: this.props.ros,\n      addWidget: this.addWidget,\n      removeWidget: this.removeWidget,\n      hideItem: this.hideItem,\n      node: this.state.view.active,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }) : false), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"JViz-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NodeGraph, {\n      key: \"node_graph\",\n      rosGraph: this.state.rosGraph,\n      view: this.state.view,\n      setNodeActive: this.setNodeActive,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ButtonPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-tip\": \"Refresh the entire ros graph\",\n      className: \"SmallButton ColorOne\",\n      onClick: this.updateRosGraph,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, \"Refresh\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SmallButton ColorTwo\",\n      onClick: () => {\n        this.setState({\n          view: this.state.view.toggleDebug()\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, this.state.view.hideDebug ? \"Show Debug\" : \"Hide Debug\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SmallButton ColorOne\",\n      onClick: () => {\n        this.setState({\n          view: this.state.view.unhideItems()\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, \"Unhide\"))), this.state.widgets.length ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 38\n      }\n    }, this.state.widgets.map(widget => widget.element)) : false);\n  }\n\n}\n\nexport default JViz;","map":{"version":3,"sources":["/home/edison/react_projects/ros-app/src/components/ros-graph.js"],"names":["React","ROSLIB","ButtonPanel","NodeGraph","NodeList","RosGraph","RosGraphView","JViz","Component","constructor","props","state","autoExpand","layouts","rosGraph","view","widgets","updateRosGraph","GetRosGraph","ros","then","result","setState","setNodeActive","treeNode","toggled","addWidget","id","element","console","log","prevState","removeWidget","filter","item","handleSearch","event","searchFor","target","value","handleSearchKey","hideItem","path","type","render","padding","display","search","nodes","topics","active","toggleDebug","hideDebug","unhideItems","length","map","widget"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport ROSLIB from 'roslib';\n\nimport ButtonPanel from '../components/ros-graph/ButtonPanel.js';\nimport NodeGraph from '../components/ros-graph/NodeGraph';\nimport NodeList from '.../components/ros-graph/NodeList';\nimport * as RosGraph from '.../lib/RosGraph';\nimport RosGraphView from '.../lib/RosGraphView';\n\nimport \".../node_modules/react-grid-layout/css/styles.css\";\nimport \".../node_modules/react-resizable/css/styles.css\";\nimport '.../styles/Rosgraph.css';\n\ntype TreeNode = {\n  name: string,\n  path: string,\n  type: RosGraph.PrimitiveType,\n}\n//Cuando se activa funcion en App.js, se utiliza funcion Props para tomar el valor de ROS\ntype Props = {\n  ros: ROSLIB.Ros,\n}\n\ntype WidgetType = {\n  element: React.Element<any>,\n  id: string,\n}\n\ntype State = {\n  autoExpand: boolean,\n  layouts: ?Object,\n  rosGraph: RosGraph.RosGraph,\n  view: RosGraphView,\n  widgets: Array<WidgetType>,\n}\n\nclass JViz extends React.Component<Props, State> {\n    state = {\n      autoExpand: true,\n      layouts: {},\n      rosGraph: new RosGraph.RosGraph(),\n      view: new RosGraphView(),\n      widgets: [],\n    }\n\n    constructor(props: Props) {\n        super(props);\n        this.updateRosGraph()\n    }\n\n    updateRosGraph = () => {\n      RosGraph.GetRosGraph(this.props.ros)\n        .then(result => this.setState({\n          rosGraph: result,\n        }))\n    }\n\n    /**\n     * @param treeNode.name {string} Node's label\n     * @param treeNode.path {string} Node's unique identifier\n     * @param treeNode.type {string} \"node\" or \"topic\" (TODO: move to enum)\n     * @param toggled {boolean} True if the node should be expanded\n     */\n    setNodeActive = (treeNode: TreeNode, toggled: boolean = true) => {\n      this.setState({\n        view: this.state.view.setNodeActive(treeNode, toggled, this.state.rosGraph)\n      })\n    }\n\n    /**\n     * @param id {string} Unique identifier of the new widget\n     * @param element {React.Node} The react component to add to the window\n     * @param name {string} The label to give the widget\n     */\n    addWidget = (id: string, element: React.Element<any>) => {\n      console.log(\"Adding: \", id, element)\n\n      this.setState(prevState => ({\n        widgets: [...prevState.widgets, {\n          id: id,\n          element: element\n        }],\n      }));\n    }\n\n  removeWidget = (id: string) => {\n    console.log(\"Removing: \", id)\n\n    const widgets = this.state.widgets.filter((item)=>{\n      return item.id !== id;\n    });\n\n    this.setState({\n      widgets: widgets,\n    })\n  }\n\n  handleSearch = (event: {target: {value: string}}) => {\n    this.setState({\n      view: this.state.view.searchFor(event.target.value),\n    })\n  }\n\n  handleSearchKey = (event: {keyCode: string}) => {\n    // if (event.keyCode === 27) {\n    //   this.setState({\n    //     view: this.state.view.searchFor(\"\"),\n    //   })\n    // }\n  }\n\n  hideItem = (path: string, type: string) => {\n    this.setState({view: this.state.view.hideItem(path, type)})\n  }\n\n\n  render() {\n    return (\n      <div className=\"JViz\">\n        <div className=\"Sidebar\">\n          <div style={{padding: 5, display: \"flex\"}}><input type=\"text\" className=\"InputTextBox\" onChange={this.handleSearch} onKeyDown={this.handleSearchKey} placeholder=\"Search...\" value={this.state.view.search}/></div>\n          <NodeList name=\"Node List\" nodes={this.state.rosGraph.nodes} view={this.state.view} setNodeActive={this.setNodeActive} type=\"node\"/>\n          <NodeList name=\"Topic List\" nodes={this.state.rosGraph.topics} view={this.state.view} setNodeActive={this.setNodeActive} type=\"topic\"/>\n          {this.state.view.active ? <ButtonPanel ros={this.props.ros} addWidget={this.addWidget} removeWidget={this.removeWidget} hideItem={this.hideItem} node={this.state.view.active} /> : false}\n        </div>\n        <div className=\"JViz-main\">\n          <NodeGraph key={\"node_graph\"} rosGraph={this.state.rosGraph} view={this.state.view} setNodeActive={this.setNodeActive}/>\n          <div className=\"ButtonPanel\">\n            <div data-tip=\"Refresh the entire ros graph\" className=\"SmallButton ColorOne\" onClick={this.updateRosGraph}>\n                Refresh\n            </div>\n            <div className=\"SmallButton ColorTwo\" onClick={() => {\n                this.setState({\n                    view: this.state.view.toggleDebug(),\n                  })\n              }}>\n              {this.state.view.hideDebug ? \"Show Debug\" : \"Hide Debug\"}\n            </div>\n            <div className=\"SmallButton ColorOne\" onClick={() => {\n                this.setState({\n                    view: this.state.view.unhideItems(),\n                  })\n              }}>\n              Unhide\n            </div>\n          </div>\n        </div>\n        {this.state.widgets.length ? <div className=\"Sidebar\">{this.state.widgets.map(widget => widget.element)}</div> : false}\n      </div>\n    );\n  }\n}\n\nexport default JViz;\n"]},"metadata":{},"sourceType":"module"}