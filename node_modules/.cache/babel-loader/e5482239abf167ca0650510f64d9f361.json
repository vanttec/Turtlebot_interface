{"ast":null,"code":"var _jsxFileName = \"/home/edison/react_projects/ros-app/src/components/ros-graph/Subscriber.js\";\nimport * as React from 'react';\nimport ROSLIB from 'roslib';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport YAML from 'yamljs';\nimport './styles/dark.css';\nimport Widget from './Widget';\n\nfunction YamlMessage(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SyntaxHighlighter, {\n    language: \"yaml\",\n    className: \"Message\",\n    useInlineStyles: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, YAML.stringify(props.message, 2)));\n}\n\nclass Subscriber extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.subscriber = new ROSLIB.Topic({\n      ros: this.props.ros,\n      name: this.props.topic,\n      messageType: this.props.type\n    });\n    this.state = {\n      autoscroll: true,\n      index: -1,\n      message: {},\n      messageCount: 0\n    };\n\n    this.componentDidMount = () => {\n      this.subscribe();\n    };\n\n    this.componentWillUnmount = () => {\n      this.subscriber.unsubscribe();\n    };\n\n    this.subscribe = () => {\n      this.subscriber.subscribe(message => {\n        this.setState(prevState => ({\n          message: message,\n          messageCount: prevState.messageCount += 1\n        }));\n      });\n    };\n  }\n\n  render() {\n    let state = \"Red\";\n\n    if (this.state.messageCount > 0) {\n      if (this.state.message) state = \"Green\";else state = \"Amber\";\n    }\n\n    return /*#__PURE__*/React.createElement(Widget, {\n      name: this.props.topic + \" (\" + this.state.messageCount + \")\",\n      state: state,\n      onRequestClose: this.props.onRequestClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(YamlMessage, {\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Subscriber;","map":{"version":3,"sources":["/home/edison/react_projects/ros-app/src/components/ros-graph/Subscriber.js"],"names":["React","ROSLIB","SyntaxHighlighter","YAML","Widget","YamlMessage","props","stringify","message","Subscriber","Component","subscriber","Topic","ros","name","topic","messageType","type","state","autoscroll","index","messageCount","componentDidMount","subscribe","componentWillUnmount","unsubscribe","setState","prevState","render","onRequestClose"],"mappings":";AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAIA,SAASC,WAAT,CAAqBC,KAArB,EAAgD;AAC9C,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAC,MAA5B;AAAmC,IAAA,SAAS,EAAC,SAA7C;AAAuD,IAAA,eAAe,EAAE,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACI,SAAL,CAAeD,KAAK,CAACE,OAArB,EAA8B,CAA9B,CADH,CADF,CADF;AAOD;;AAgBD,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAuD;AAAA;AAAA;AAAA,SACrDC,UADqD,GACxC,IAAIV,MAAM,CAACW,KAAX,CAAiB;AAC5BC,MAAAA,GAAG,EAAE,KAAKP,KAAL,CAAWO,GADY;AAE5BC,MAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWS,KAFW;AAG5BC,MAAAA,WAAW,EAAE,KAAKV,KAAL,CAAWW;AAHI,KAAjB,CADwC;AAAA,SAOrDC,KAPqD,GAO7C;AACNC,MAAAA,UAAU,EAAE,IADN;AAENC,MAAAA,KAAK,EAAE,CAAC,CAFF;AAGNZ,MAAAA,OAAO,EAAE,EAHH;AAINa,MAAAA,YAAY,EAAE;AAJR,KAP6C;;AAAA,SAcrDC,iBAdqD,GAcjC,MAAM;AACxB,WAAKC,SAAL;AACD,KAhBoD;;AAAA,SAkBrDC,oBAlBqD,GAkB9B,MAAM;AAC3B,WAAKb,UAAL,CAAgBc,WAAhB;AACD,KApBoD;;AAAA,SAsBrDF,SAtBqD,GAsBzC,MAAM;AAChB,WAAKZ,UAAL,CAAgBY,SAAhB,CAA2Bf,OAAD,IAAsB;AAC9C,aAAKkB,QAAL,CAAcC,SAAS,KAAK;AAC1BnB,UAAAA,OAAO,EAAEA,OADiB;AAE1Ba,UAAAA,YAAY,EAAEM,SAAS,CAACN,YAAV,IAA0B;AAFd,SAAL,CAAvB;AAID,OALD;AAMD,KA7BoD;AAAA;;AA+BrDO,EAAAA,MAAM,GAAG;AACP,QAAIV,KAAK,GAAG,KAAZ;;AACA,QAAI,KAAKA,KAAL,CAAWG,YAAX,GAA0B,CAA9B,EAAiC;AAC/B,UAAI,KAAKH,KAAL,CAAWV,OAAf,EAAwBU,KAAK,GAAG,OAAR,CAAxB,KACKA,KAAK,GAAG,OAAR;AACN;;AACD,wBACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWS,KAAX,GAAmB,IAAnB,GAA0B,KAAKG,KAAL,CAAWG,YAArC,GAAoD,GAAlE;AAAuE,MAAA,KAAK,EAAEH,KAA9E;AAAqF,MAAA,cAAc,EAAE,KAAKZ,KAAL,CAAWuB,cAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA1CoD;;AA6CvD,eAAeC,UAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport ROSLIB from 'roslib';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport YAML from 'yamljs';\nimport './styles/dark.css';\nimport Widget from './Widget';\n\ntype Message = {}\n\nfunction YamlMessage(props: {message: Message}) {\n  return (\n    <div className=\"Message\">\n      <SyntaxHighlighter language=\"yaml\" className=\"Message\" useInlineStyles={false}>\n        {YAML.stringify(props.message, 2)}\n      </SyntaxHighlighter>\n    </div>\n  )\n}\n\ntype Props = {\n  onRequestClose?: () => void,\n  ros: ROSLIB.Ros,\n  topic: string,\n  type: string,\n}\n\ntype State = {\n  autoscroll: boolean,\n  index: number,\n  message: Message,\n  messageCount: number,\n}\n\nclass Subscriber extends React.Component<Props, State> {\n  subscriber = new ROSLIB.Topic({\n    ros: this.props.ros,\n    name: this.props.topic,\n    messageType: this.props.type,\n  })\n\n  state = {\n    autoscroll: true,\n    index: -1,\n    message: {},\n    messageCount: 0,\n  }\n\n  componentDidMount = () => {\n    this.subscribe();\n  }\n\n  componentWillUnmount = () => {\n    this.subscriber.unsubscribe();\n  }\n\n  subscribe = () => {\n    this.subscriber.subscribe((message: Message) => {\n      this.setState(prevState => ({\n        message: message,\n        messageCount: prevState.messageCount += 1,\n      }));\n    });\n  }\n\n  render() {\n    let state = \"Red\"\n    if (this.state.messageCount > 0) {\n      if (this.state.message) state = \"Green\"\n      else state = \"Amber\"\n    }\n    return (\n      <Widget name={this.props.topic + \" (\" + this.state.messageCount + \")\"} state={state} onRequestClose={this.props.onRequestClose}>\n        <YamlMessage message={this.state.message} />\n      </Widget>\n    );\n  }\n}\n\nexport default Subscriber;\n"]},"metadata":{},"sourceType":"module"}