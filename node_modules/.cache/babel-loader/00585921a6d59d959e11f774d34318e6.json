{"ast":null,"code":"var _jsxFileName = \"/home/edison/react_projects/ros-app/src/components/ros-graph.js\";\nimport * as React from 'react';\nimport ROSLIB from 'roslib';\nimport * as RosGraph from './../lib/RosGraph'; //import \"../../node_modules/react-grid-layout/css/styles.css\";\n//import \"../node_modules/react-resizable/css/styles.css\";\n\nimport './../styles/Rosgraph.css'; //Cuando se activa funcion en App.js, se utiliza funcion Props para tomar el valor de ROS\n\nclass Rosgraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      autoExpand: true,\n      layouts: {}\n    };\n\n    this.updateRosGraph = () => {\n      RosGraph.GetRosGraph(this.props.ros).then(result => this.setState({\n        rosGraph: result\n      }));\n    };\n\n    this.setNodeActive = (treeNode, toggled = true) => {\n      this.setState({\n        view: this.state.view.setNodeActive(treeNode, toggled, this.state.rosGraph)\n      });\n    };\n\n    this.updateRosGraph();\n  }\n\n  render() {\n    console.log(\"Graph\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Graph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      id: \"ROSID\",\n      className: \"graph_column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Hola mundo\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ButtonPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SmallButton ColorOne\",\n      onClick: this.publish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, \"Publish\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SmallButton ColorTwo\",\n      onClick: this.toggleRepeat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, \"Subscribe\")))));\n  }\n\n}\n\nexport default Rosgraph;","map":{"version":3,"sources":["/home/edison/react_projects/ros-app/src/components/ros-graph.js"],"names":["React","ROSLIB","RosGraph","Rosgraph","Component","constructor","props","state","autoExpand","layouts","updateRosGraph","GetRosGraph","ros","then","result","setState","rosGraph","setNodeActive","treeNode","toggled","view","render","console","log","publish","toggleRepeat"],"mappings":";AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,mBAA1B,C,CAEA;AACA;;AACA,OAAO,0BAAP,C,CAEA;;AAuBA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAqD;AAMjDC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;AADwB,SAL1BC,KAK0B,GALlB;AACNC,MAAAA,UAAU,EAAE,IADN;AAENC,MAAAA,OAAO,EAAE;AAFH,KAKkB;;AAAA,SAK1BC,cAL0B,GAKT,MAAM;AACrBR,MAAAA,QAAQ,CAACS,WAAT,CAAqB,KAAKL,KAAL,CAAWM,GAAhC,EACGC,IADH,CACQC,MAAM,IAAI,KAAKC,QAAL,CAAc;AAC9BC,QAAAA,QAAQ,EAAEF;AADoB,OAAd,CADlB;AAIH,KAV2B;;AAAA,SAiB1BG,aAjB0B,GAiBV,CAACC,QAAD,EAAqBC,OAAgB,GAAG,IAAxC,KAAiD;AAC/D,WAAKJ,QAAL,CAAc;AACZK,QAAAA,IAAI,EAAE,KAAKb,KAAL,CAAWa,IAAX,CAAgBH,aAAhB,CAA8BC,QAA9B,EAAwCC,OAAxC,EAAiD,KAAKZ,KAAL,CAAWS,QAA5D;AADM,OAAd;AAGD,KArByB;;AAExB,SAAKN,cAAL;AACH;;AAoBDW,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,wBAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,EAAE,EAAC,OAAP;AAAe,MAAA,SAAS,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAsC,MAAA,OAAO,EAAE,KAAKC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAII;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAsC,MAAA,OAAO,EAAE,KAAKC,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CAFF,CADA,CADF,CAFF;AAkBD;;AAjDkD;;AAoDrD,eAAetB,QAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport ROSLIB from 'roslib';\nimport * as RosGraph from './../lib/RosGraph';\n\n//import \"../../node_modules/react-grid-layout/css/styles.css\";\n//import \"../node_modules/react-resizable/css/styles.css\";\nimport './../styles/Rosgraph.css';\n\n//Cuando se activa funcion en App.js, se utiliza funcion Props para tomar el valor de ROS\ntype Props = {\n  ros: ROSLIB.Ros,\n}\n\ntype WidgetType = {\n  element: React.Element<any>,\n  id: string,\n}\ntype TreeNode = {\n  name: string,\n  path: string,\n  type: RosGraph.PrimitiveType,\n}\n\ntype State = {\n  autoExpand: boolean,\n  layouts: ?Object,\n  rosGraph: RosGraph.RosGraph,\n  widgets: Array<WidgetType>,\n}\n\n\nclass Rosgraph extends React.Component<Props, State> {\n    state = {\n      autoExpand: true,\n      layouts: {},\n    }\n\n    constructor(props: Props) {\n      super(props);\n      this.updateRosGraph()\n  }\n\n    updateRosGraph = () => {\n      RosGraph.GetRosGraph(this.props.ros)\n        .then(result => this.setState({\n        rosGraph: result,\n      }))\n  }\n    /**\n     * @param treeNode.name {string} Node's label\n     * @param treeNode.path {string} Node's unique identifier\n     * @param treeNode.type {string} \"node\" or \"topic\" (TODO: move to enum)\n     * @param toggled {boolean} True if the node should be expanded\n     */\n    setNodeActive = (treeNode: TreeNode, toggled: boolean = true) => {\n      this.setState({\n        view: this.state.view.setNodeActive(treeNode, toggled, this.state.rosGraph)\n      })\n    }\n\n  render() {\n    console.log(\"Graph\");\n    return (\n      \n      <div className=\"Graph\">\n        <div className=\"Sidebar\">\n        <h4 id=\"ROSID\" className=\"graph_column\">\n          Hola mundo\n          <div className=\"ButtonPanel\">\n              <div className=\"SmallButton ColorOne\" onClick={this.publish}>\n                Publish\n              </div>\n              <div className=\"SmallButton ColorTwo\" onClick={this.toggleRepeat}>\n              Subscribe\n              </div>\n          </div>\n        </h4>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Rosgraph;\n"]},"metadata":{},"sourceType":"module"}