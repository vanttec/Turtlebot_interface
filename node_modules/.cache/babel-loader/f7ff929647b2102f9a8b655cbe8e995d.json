{"ast":null,"code":"var _jsxFileName = \"/home/edison/react_projects/ros-app/src/components/ros-graph.js\";\nimport * as React from 'react';\nimport ROSLIB from 'roslib';\nimport * as RosGraph from './../lib/RosGraph';\nimport ButtonPanel from './ros-graph/ButtonPanel'; //import \"../../node_modules/react-grid-layout/css/styles.css\";\n//import \"../node_modules/react-resizable/css/styles.css\";\n\nimport './../styles/Rosgraph.css'; //Cuando se activa funcion en App.js, se utiliza funcion Props para tomar el valor de ROS\n\nclass Rosgraph extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      autoExpand: true,\n      layouts: {}\n    };\n\n    this.setNodeActive = (treeNode, toggled = true) => {\n      this.setState({\n        view: this.state.view.setNodeActive(treeNode, toggled, this.state.rosGraph)\n      });\n    };\n\n    this.addWidget = (id, element) => {\n      console.log(\"Adding: \", id, element);\n      this.setState(prevState => ({\n        widgets: [...prevState.widgets, {\n          id: id,\n          element: element\n        }]\n      }));\n    };\n\n    this.removeWidget = id => {\n      console.log(\"Removing: \", id);\n      const widgets = this.state.widgets.filter(item => {\n        return item.id !== id;\n      });\n      this.setState({\n        widgets: widgets\n      });\n    };\n\n    this.hideItem = (path, type) => {\n      this.setState({\n        view: this.state.view.hideItem(path, type)\n      });\n    };\n  }\n\n  render() {\n    console.log(\"Graph\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Graph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      id: \"ROSID\",\n      className: \"graph_column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"Hola mundo\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ButtonPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SmallButton ColorOne\",\n      onClick: this.publish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"Publish\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SmallButton ColorTwo\",\n      onClick: this.toggleRepeat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, \"Subscribe\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, this.state.view.active ? /*#__PURE__*/React.createElement(ButtonPanel, {\n      ros: this.props.ros,\n      addWidget: this.addWidget,\n      removeWidget: this.removeWidget,\n      hideItem: this.hideItem,\n      node: this.state.view.active,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 39\n      }\n    }) : false)))));\n  }\n\n}\n\nexport default Rosgraph;","map":{"version":3,"sources":["/home/edison/react_projects/ros-app/src/components/ros-graph.js"],"names":["React","ROSLIB","RosGraph","ButtonPanel","Rosgraph","Component","state","autoExpand","layouts","setNodeActive","treeNode","toggled","setState","view","rosGraph","addWidget","id","element","console","log","prevState","widgets","removeWidget","filter","item","hideItem","path","type","render","publish","toggleRepeat","active","props","ros"],"mappings":";AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,mBAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB,C,CAEA;AACA;;AACA,OAAO,0BAAP,C,CAEA;;AAuBA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAqD;AAAA;AAAA;AAAA,SACjDC,KADiD,GACzC;AACNC,MAAAA,UAAU,EAAE,IADN;AAENC,MAAAA,OAAO,EAAE;AAFH,KADyC;;AAAA,SAcjDC,aAdiD,GAcjC,CAACC,QAAD,EAAqBC,OAAgB,GAAG,IAAxC,KAAiD;AAC/D,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE,KAAKP,KAAL,CAAWO,IAAX,CAAgBJ,aAAhB,CAA8BC,QAA9B,EAAwCC,OAAxC,EAAiD,KAAKL,KAAL,CAAWQ,QAA5D;AADM,OAAd;AAGD,KAlBgD;;AAAA,SAmBjDC,SAnBiD,GAmBrC,CAACC,EAAD,EAAaC,OAAb,KAA6C;AACvDC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,EAAxB,EAA4BC,OAA5B;AAEA,WAAKL,QAAL,CAAcQ,SAAS,KAAK;AAC1BC,QAAAA,OAAO,EAAE,CAAC,GAAGD,SAAS,CAACC,OAAd,EAAuB;AAC9BL,UAAAA,EAAE,EAAEA,EAD0B;AAE9BC,UAAAA,OAAO,EAAEA;AAFqB,SAAvB;AADiB,OAAL,CAAvB;AAMD,KA5BgD;;AAAA,SA6BjDK,YA7BiD,GA6BjCN,EAAD,IAAgB;AAC7BE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,EAA1B;AAEA,YAAMK,OAAO,GAAG,KAAKf,KAAL,CAAWe,OAAX,CAAmBE,MAAnB,CAA2BC,IAAD,IAAQ;AAChD,eAAOA,IAAI,CAACR,EAAL,KAAYA,EAAnB;AACD,OAFe,CAAhB;AAIA,WAAKJ,QAAL,CAAc;AACZS,QAAAA,OAAO,EAAEA;AADG,OAAd;AAGD,KAvCgD;;AAAA,SAyCjDI,QAzCiD,GAyCtC,CAACC,IAAD,EAAeC,IAAf,KAAgC;AACzC,WAAKf,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAE,KAAKP,KAAL,CAAWO,IAAX,CAAgBY,QAAhB,CAAyBC,IAAzB,EAA+BC,IAA/B;AAAP,OAAd;AACD,KA3CgD;AAAA;;AA4CnDC,EAAAA,MAAM,GAAG;AACPV,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,wBAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,EAAE,EAAC,OAAP;AAAe,MAAA,SAAS,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAsC,MAAA,OAAO,EAAE,KAAKU,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAII;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAsC,MAAA,OAAO,EAAE,KAAKC,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,eAOE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKxB,KAAL,CAAWO,IAAX,CAAgBkB,MAAhB,gBAAyB,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,GAA7B;AAAkC,MAAA,SAAS,EAAE,KAAKlB,SAAlD;AAA6D,MAAA,YAAY,EAAE,KAAKO,YAAhF;AAA8F,MAAA,QAAQ,EAAE,KAAKG,QAA7G;AAAuH,MAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWO,IAAX,CAAgBkB,MAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,GAAmL,KADpL,CAPF,CAFF,CADA,CADF,CAFF;AAqBD;;AAnEkD;;AAsErD,eAAe3B,QAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport ROSLIB from 'roslib';\nimport * as RosGraph from './../lib/RosGraph';\nimport ButtonPanel from './ros-graph/ButtonPanel';\n\n//import \"../../node_modules/react-grid-layout/css/styles.css\";\n//import \"../node_modules/react-resizable/css/styles.css\";\nimport './../styles/Rosgraph.css';\n\n//Cuando se activa funcion en App.js, se utiliza funcion Props para tomar el valor de ROS\ntype Props = {\n  ros: ROSLIB.Ros,\n}\n\ntype WidgetType = {\n  element: React.Element<any>,\n  id: string,\n}\ntype TreeNode = {\n  name: string,\n  path: string,\n  type: RosGraph.PrimitiveType,\n}\n\ntype State = {\n  autoExpand: boolean,\n  layouts: ?Object,\n  rosGraph: RosGraph.RosGraph,\n  widgets: Array<WidgetType>,\n}\n\n\nclass Rosgraph extends React.Component<Props, State> {\n    state = {\n      autoExpand: true,\n      layouts: {},\n    }\n\n    \n\n    /**\n     * @param treeNode.name {string} Node's label\n     * @param treeNode.path {string} Node's unique identifier\n     * @param treeNode.type {string} \"node\" or \"topic\" (TODO: move to enum)\n     * @param toggled {boolean} True if the node should be expanded\n     */\n    setNodeActive = (treeNode: TreeNode, toggled: boolean = true) => {\n      this.setState({\n        view: this.state.view.setNodeActive(treeNode, toggled, this.state.rosGraph)\n      })\n    }\n    addWidget = (id: string, element: React.Element<any>) => {\n      console.log(\"Adding: \", id, element)\n\n      this.setState(prevState => ({\n        widgets: [...prevState.widgets, {\n          id: id,\n          element: element\n        }],\n      }));\n    }\n    removeWidget = (id: string) => {\n      console.log(\"Removing: \", id)\n  \n      const widgets = this.state.widgets.filter((item)=>{\n        return item.id !== id;\n      });\n  \n      this.setState({\n        widgets: widgets,\n      })\n    }\n    \n    hideItem = (path: string, type: string) => {\n      this.setState({view: this.state.view.hideItem(path, type)})\n    }\n  render() {\n    console.log(\"Graph\");\n    return (\n      \n      <div className=\"Graph\">\n        <div className=\"Sidebar\">\n        <h4 id=\"ROSID\" className=\"graph_column\">\n          Hola mundo\n          <div className=\"ButtonPanel\">\n              <div className=\"SmallButton ColorOne\" onClick={this.publish}>\n                Publish\n              </div>\n              <div className=\"SmallButton ColorTwo\" onClick={this.toggleRepeat}>\n              Subscribe\n              </div>\n            <div className=\"Button\">\n            {this.state.view.active ? <ButtonPanel ros={this.props.ros} addWidget={this.addWidget} removeWidget={this.removeWidget} hideItem={this.hideItem} node={this.state.view.active} /> : false}\n            </div>  \n          </div>\n        </h4>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Rosgraph;\n"]},"metadata":{},"sourceType":"module"}