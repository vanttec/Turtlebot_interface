{"ast":null,"code":"var _jsxFileName = \"/home/edison/react_projects/ros-app/src/components/ros-graph/NodeList.js\";\nimport * as React from 'react';\nimport { Treebeard } from 'react-treebeard';\nimport styles from './styles/treebeard-theme';\nimport * as NodeTree from './lib/NodeTree';\nimport * as RosGraph from './lib/RosGraph';\nimport RosGraphView from './lib/RosGraphView';\nimport Widget from '/components/ros-graph/Widget';\n\n/**\n * Draws a list of nodes and gives options for interaction\n * @extends react.Component\n */\nclass NodeList extends React.Component {\n  render() {\n    const tree = NodeTree.GetNodeTree(this.props.nodes, this.props.view, this.props.type);\n    return /*#__PURE__*/React.createElement(Widget, {\n      name: this.props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Treebeard, {\n      data: tree,\n      onToggle: this.props.setNodeActive,\n      style: styles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default NodeList;","map":{"version":3,"sources":["/home/edison/react_projects/ros-app/src/components/ros-graph/NodeList.js"],"names":["React","Treebeard","styles","NodeTree","RosGraph","RosGraphView","Widget","NodeList","Component","render","tree","GetNodeTree","props","nodes","view","type","name","setNodeActive"],"mappings":";AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAO,KAAKC,QAAZ,MAA0B,gBAA1B;AACA,OAAO,KAAKC,QAAZ,MAA0B,gBAA1B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAYA;;;;AAIA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAiD;AAE/CC,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAGP,QAAQ,CAACQ,WAAT,CAAqB,KAAKC,KAAL,CAAWC,KAAhC,EAAuC,KAAKD,KAAL,CAAWE,IAAlD,EAAwD,KAAKF,KAAL,CAAWG,IAAnE,CAAb;AACA,wBACA,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEN,IADR;AAEE,MAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWK,aAFvB;AAGE,MAAA,KAAK,EAAEf,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADA;AASD;;AAb8C;;AAgBjD,eAAeK,QAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport {Treebeard} from 'react-treebeard';\nimport styles from './styles/treebeard-theme';\n\nimport * as NodeTree from './lib/NodeTree';\nimport * as RosGraph from './lib/RosGraph'\nimport RosGraphView from './lib/RosGraphView';\nimport Widget from '/components/ros-graph/Widget';\n\nimport type {SimpleNode} from '../lib/RosGraphView';\n\ntype Props<A> = {\n  name: string,\n  nodes: Array<A>,\n  setNodeActive: (treeNode: SimpleNode, toggled: boolean) => void,\n  type: RosGraph.PrimitiveType,\n  view: RosGraphView,\n}\n\n/**\n * Draws a list of nodes and gives options for interaction\n * @extends react.Component\n */\nclass NodeList extends React.Component<Props<*>> {\n\n  render() {\n    const tree = NodeTree.GetNodeTree(this.props.nodes, this.props.view, this.props.type)\n    return (\n    <Widget name={this.props.name}>\n        <Treebeard\n          data={tree}\n          onToggle={this.props.setNodeActive}\n          style={styles}\n         />\n    </Widget>\n    );\n  }\n}\n\nexport default NodeList;\n"]},"metadata":{},"sourceType":"module"}