{"ast":null,"code":"var _jsxFileName = \"/home/edison/react_projects/ros-app/src/components/ros-graph.js\";\nimport * as React from 'react';\nimport ROSLIB from 'roslib'; //import \"../../node_modules/react-grid-layout/css/styles.css\";\n//import \"../node_modules/react-resizable/css/styles.css\";\n\nimport './../styles/Rosgraph.css'; //Cuando se activa funcion en App.js, se utiliza funcion Props para tomar el valor de ROS\n\nclass Rosgraph extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      autoExpand: true,\n      layouts: {}\n    };\n  }\n\n  /**\n   * @param treeNode.name {string} Node's label\n   * @param treeNode.path {string} Node's unique identifier\n   * @param treeNode.type {string} \"node\" or \"topic\" (TODO: move to enum)\n   * @param toggled {boolean} True if the node should be expanded\n   */\n  render() {\n    console.log(\"Graph\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Graph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      id: \"ROSID\",\n      className: \"graph_column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Hola mundo\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ButtonPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SmallButton ColorOne\",\n      onClick: this.publish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \"Publish\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SmallButton ColorTwo\",\n      onClick: this.toggleRepeat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default Rosgraph;","map":{"version":3,"sources":["/home/edison/react_projects/ros-app/src/components/ros-graph.js"],"names":["React","ROSLIB","Rosgraph","Component","state","autoExpand","layouts","render","console","log","publish","toggleRepeat"],"mappings":";AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;AACA;;AACA,OAAO,0BAAP,C,CAEA;;AAkBA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAqD;AAAA;AAAA;AAAA,SACjDC,KADiD,GACzC;AACNC,MAAAA,UAAU,EAAE,IADN;AAENC,MAAAA,OAAO,EAAE;AAFH,KADyC;AAAA;;AAMjD;;;;;;AAQFC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,wBAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,EAAE,EAAC,OAAP;AAAe,MAAA,SAAS,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAsC,MAAA,OAAO,EAAE,KAAKC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAII;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAsC,MAAA,OAAO,EAAE,KAAKC,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAFF,CADA,CADF,CAFF;AAiBD;;AAjCkD;;AAoCrD,eAAeT,QAAf","sourcesContent":["// @flow\nimport * as React from 'react';\nimport ROSLIB from 'roslib';\n\n//import \"../../node_modules/react-grid-layout/css/styles.css\";\n//import \"../node_modules/react-resizable/css/styles.css\";\nimport './../styles/Rosgraph.css';\n\n//Cuando se activa funcion en App.js, se utiliza funcion Props para tomar el valor de ROS\ntype Props = {\n  ros: ROSLIB.Ros,\n}\n\ntype WidgetType = {\n  element: React.Element<any>,\n  id: string,\n}\n\ntype State = {\n  autoExpand: boolean,\n  layouts: ?Object,\n  rosGraph: RosGraph.RosGraph,\n  view: RosGraphView,\n  widgets: Array<WidgetType>,\n}\n\nclass Rosgraph extends React.Component<Props, State> {\n    state = {\n      autoExpand: true,\n      layouts: {},\n    }\n\n    /**\n     * @param treeNode.name {string} Node's label\n     * @param treeNode.path {string} Node's unique identifier\n     * @param treeNode.type {string} \"node\" or \"topic\" (TODO: move to enum)\n     * @param toggled {boolean} True if the node should be expanded\n     */\n\n\n  render() {\n    console.log(\"Graph\");\n    return (\n      \n      <div className=\"Graph\">\n        <div className=\"Sidebar\">\n        <h4 id=\"ROSID\" className=\"graph_column\">\n          Hola mundo\n          <div className=\"ButtonPanel\">\n              <div className=\"SmallButton ColorOne\" onClick={this.publish}>\n                Publish\n              </div>\n              <div className=\"SmallButton ColorTwo\" onClick={this.toggleRepeat}>\n              </div>\n          </div>\n        </h4>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default Rosgraph;\n"]},"metadata":{},"sourceType":"module"}