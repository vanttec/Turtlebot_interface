{"ast":null,"code":"var _jsxFileName = \"/home/edison/react_projects/ros-app/src/components/ros-graph.js\";\nimport * as React from 'react';\nimport ROSLIB from 'roslib';\nimport * as RosGraph from './../lib/RosGraph';\nimport NodeGraph from './ros-graph/NodeGraph';\nimport ButtonPanel from './ros-graph/ButtonPanel';\nimport RosGraphView from './../lib/RosGraphView';\nimport NodeList from './ros-graph/NodeList'; //import \"../../node_modules/react-grid-layout/css/styles.css\";\n//import \"../node_modules/react-resizable/css/styles.css\";\n\nimport './../styles/Rosgraph.css'; //Cuando se activa funcion en App.js, se utiliza funcion Props para tomar el valor de ROS\n\nclass Rosgraph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      autoExpand: true,\n      layouts: {},\n      view: new RosGraphView(),\n      rosGraph: new RosGraph.RosGraph(),\n      url: \"ws://localhost:9090\"\n    };\n    this.ros = null;\n\n    this.updateRosGraph = () => {\n      RosGraph.GetRosGraph(this.ros).then(result => this.setState({\n        rosGraph: result\n      }));\n    };\n\n    this.setNodeActive = (treeNode, toggled = true) => {\n      this.setState({\n        view: this.state.view.setNodeActive(treeNode, toggled, this.state.rosGraph)\n      });\n    };\n\n    this.addWidget = (id, element) => {\n      console.log(\"Adding: \", id, element);\n      this.setState(prevState => ({\n        widgets: [...prevState.widgets, {\n          id: id,\n          element: element\n        }]\n      }));\n    };\n\n    this.removeWidget = id => {\n      console.log(\"Removing: \", id);\n      const widgets = this.state.widgets.filter(item => {\n        return item.id !== id;\n      });\n      this.setState({\n        widgets: widgets\n      });\n    };\n\n    this.hideItem = (path, type) => {\n      this.setState({\n        view: this.state.view.hideItem(path, type)\n      });\n    };\n\n    this.handleSearch = event => {\n      this.setState({\n        view: this.state.view.searchFor(event.target.value)\n      });\n    };\n\n    this.handleSearchKey = event => {// if (event.keyCode === 27) {\n      //   this.setState({\n      //     view: this.state.view.searchFor(\"\"),\n      //   })\n      // }\n    };\n\n    this.ros = new ROSLIB.Ros({\n      url: this.state.url\n    });\n    this.updateRosGraph();\n  }\n\n  render() {\n    console.log(\"Graph\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Graph\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      id: \"ROSID\",\n      className: \"graph_column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, \"Hola mundo\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ButtonPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 5,\n        display: \"flex\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"InputTextBox\",\n      onChange: this.handleSearch,\n      onKeyDown: this.handleSearchKey,\n      placeholder: \"Search...\",\n      value: this.state.view.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(NodeList, {\n      name: \"Node List\",\n      nodes: this.state.rosGraph.nodes,\n      view: this.state.view,\n      setNodeActive: this.setNodeActive,\n      type: \"node\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(NodeList, {\n      name: \"Topic List\",\n      nodes: this.state.rosGraph.topics,\n      view: this.state.view,\n      setNodeActive: this.setNodeActive,\n      type: \"topic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }), this.state.view.active ? /*#__PURE__*/React.createElement(ButtonPanel, {\n      ros: this.ros,\n      addWidget: this.addWidget,\n      removeWidget: this.removeWidget,\n      hideItem: this.hideItem,\n      node: this.state.view.active,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 41\n      }\n    }) : false)))));\n  }\n\n}\n\nexport default Rosgraph;","map":{"version":3,"sources":["/home/edison/react_projects/ros-app/src/components/ros-graph.js"],"names":["React","ROSLIB","RosGraph","NodeGraph","ButtonPanel","RosGraphView","NodeList","Rosgraph","Component","constructor","props","state","autoExpand","layouts","view","rosGraph","url","ros","updateRosGraph","GetRosGraph","then","result","setState","setNodeActive","treeNode","toggled","addWidget","id","element","console","log","prevState","widgets","removeWidget","filter","item","hideItem","path","type","handleSearch","event","searchFor","target","value","handleSearchKey","Ros","render","padding","display","search","nodes","topics","active"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport ROSLIB from 'roslib';\nimport * as RosGraph from './../lib/RosGraph';\nimport NodeGraph from './ros-graph/NodeGraph';\nimport ButtonPanel from './ros-graph/ButtonPanel';\nimport RosGraphView from './../lib/RosGraphView';\nimport NodeList from './ros-graph/NodeList';\n//import \"../../node_modules/react-grid-layout/css/styles.css\";\n//import \"../node_modules/react-resizable/css/styles.css\";\nimport './../styles/Rosgraph.css';\n\n//Cuando se activa funcion en App.js, se utiliza funcion Props para tomar el valor de ROS\n\ntype WidgetType = {\n  element: React.Element<any>,\n  id: string,\n}\ntype TreeNode = {\n  name: string,\n  path: string,\n  type: RosGraph.PrimitiveType,\n}\n\ntype State = {\n  autoExpand: boolean,\n  layouts: ?Object,\n  rosGraph: RosGraph.RosGraph,\n  view: RosGraphView,\n  widgets: Array<WidgetType>,\n  rosGraph: RosGraph.RosGraph,\n}\n\n\nclass Rosgraph extends React.Component<Props, State> {\n    state = {\n      autoExpand: true,\n      layouts: {},\n      view: new RosGraphView(),\n      rosGraph: new RosGraph.RosGraph(),\n      url: \"ws://localhost:9090\",\n    }\n    ros = null\n    \n    constructor(props: Props) {\n      super(props);\n      this.ros = new ROSLIB.Ros({\n        url : this.state.url,\n      })\n      this.updateRosGraph()\n  }\n    updateRosGraph = () => {\n      RosGraph.GetRosGraph(this.ros)\n        .then(result => this.setState({\n          rosGraph: result,\n        }))\n    }\n    \n\n    /**\n     * @param treeNode.name {string} Node's label\n     * @param treeNode.path {string} Node's unique identifier\n     * @param treeNode.type {string} \"node\" or \"topic\" (TODO: move to enum)\n     * @param toggled {boolean} True if the node should be expanded\n     */\n    setNodeActive = (treeNode: TreeNode, toggled: boolean = true) => {\n      this.setState({\n        view: this.state.view.setNodeActive(treeNode, toggled, this.state.rosGraph)\n      })\n    }\n    addWidget = (id: string, element: React.Element<any>) => {\n      console.log(\"Adding: \", id, element)\n\n      this.setState(prevState => ({\n        widgets: [...prevState.widgets, {\n          id: id,\n          element: element\n        }],\n      }));\n    }\n    removeWidget = (id: string) => {\n      console.log(\"Removing: \", id)\n  \n      const widgets = this.state.widgets.filter((item)=>{\n        return item.id !== id;\n      });\n  \n      this.setState({\n        widgets: widgets,\n      })\n    }\n    \n    hideItem = (path: string, type: string) => {\n      this.setState({view: this.state.view.hideItem(path, type)})\n    }\n    handleSearch = (event: {target: {value: string}}) => {\n      this.setState({\n        view: this.state.view.searchFor(event.target.value),\n      })\n    }\n    handleSearchKey = (event: {keyCode: string}) => {\n      // if (event.keyCode === 27) {\n      //   this.setState({\n      //     view: this.state.view.searchFor(\"\"),\n      //   })\n      // }\n    }\n  render() {\n    console.log(\"Graph\");\n    return (\n      \n    <div className=\"Graph\">\n      <div className=\"Sidebar\">\n        <h4 id=\"ROSID\" className=\"graph_column\">\n          Hola mundo\n          <div className=\"ButtonPanel\">\n             {/* <div className=\"SmallButton ColorOne\" onClick={this.publish}>\n                Publish\n              </div>\n              <div className=\"SmallButton ColorTwo\" onClick={this.toggleRepeat}>\n              Subscribe\n              </div>*/}\n            <div className=\"Sidebar\"> \n              <div style={{padding: 5, display: \"flex\"}}>\n              <input type=\"text\" className=\"InputTextBox\" onChange={this.handleSearch} onKeyDown={this.handleSearchKey} placeholder=\"Search...\" value={this.state.view.search}/>\n              </div>\n              <NodeList name=\"Node List\" nodes={this.state.rosGraph.nodes} view={this.state.view} setNodeActive={this.setNodeActive} type=\"node\"/>\n              <NodeList name=\"Topic List\" nodes={this.state.rosGraph.topics} view={this.state.view} setNodeActive={this.setNodeActive} type=\"topic\"/>\n              {this.state.view.active ? <ButtonPanel ros={this.ros} addWidget={this.addWidget} removeWidget={this.removeWidget} hideItem={this.hideItem} node={this.state.view.active} /> : false}\n            </div>  \n          </div>\n        </h4>\n      </div>\n     \n    </div>\n    );\n  }\n}\n\nexport default Rosgraph;\n"]},"metadata":{},"sourceType":"module"}