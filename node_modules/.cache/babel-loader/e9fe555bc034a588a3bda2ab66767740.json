{"ast":null,"code":"var _jsxFileName = \"/home/edison/react_projects/ros-app/src/components/ros-graph/Publisher.js\";\nimport * as React from 'react';\nimport ROSLIB from 'roslib';\nimport Message from '../components/ros-graph/Message';\nimport Widget from '../components/ros-graph/Widget';\n\nclass Publisher extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      auto: false,\n      message: this.decodeTypeDefsRec(this.props.details[0], this.props.details),\n      repeat: 0,\n      values: this.props.details.map(message => message.examples)\n    };\n    this.intervalId = null;\n    this.frequency = [{\n      interval: 0,\n      display: \"Single\"\n    }, {\n      interval: 10000,\n      display: \"0.1 Hz\"\n    }, {\n      interval: 5000,\n      display: \"0.5 Hz\"\n    }, {\n      interval: 1000,\n      display: \"1 Hz\"\n    }, {\n      interval: 200,\n      display: \"5 Hz\"\n    }, {\n      interval: 100,\n      display: \"10 Hz\"\n    }];\n    this.publisher = new ROSLIB.Topic({\n      ros: this.props.ros,\n      name: this.props.topic,\n      messageType: this.props.type\n    });\n\n    this.componentWillUnmount = () => {\n      if (this.state.repeat && this.intervalId) {\n        clearInterval(this.intervalId);\n      }\n\n      this.setState({\n        repeat: 0\n      });\n    };\n\n    this.publish = () => {\n      if (!this.state.message) return;\n      var messageObj = this.state.message;\n\n      if (this.state.auto) {\n        const time = Date.now();\n        if (messageObj.header) messageObj.header.stamp = {\n          secs: time / 1000,\n          nsecs: time % 1000\n        };\n      }\n\n      const message = new ROSLIB.Message(messageObj);\n      this.publisher.publish(message);\n    };\n\n    this.toggleRepeat = () => {\n      const index = (this.state.repeat + 1) % this.frequency.length;\n      if (this.intervalId) clearInterval(this.intervalId);\n\n      if (index !== 0) {\n        this.intervalId = setInterval(this.publish, this.frequency[index].interval); // publish at 1Hz\n      }\n\n      this.setState({\n        repeat: index\n      });\n    };\n  }\n\n  // calls itself recursively to resolve type definition using hints.\n  decodeTypeDefsRec(theType, hints) {\n    var typeDefDict = {};\n\n    for (var i = 0; i < theType.fieldnames.length; i++) {\n      const arrayLen = theType.fieldarraylen[i];\n      const fieldName = theType.fieldnames[i];\n      const fieldType = theType.fieldtypes[i];\n      var fieldExample = theType.examples[i];\n\n      if (fieldType.indexOf('/') === -1) {\n        // check the fieldType includes '/' or not\n        if (arrayLen === -1) {\n          if (fieldType === \"float64\") {\n            console.log(\"fieldExample\", fieldExample, parseFloat(fieldExample));\n            fieldExample = parseFloat(fieldExample);\n          }\n\n          typeDefDict[fieldName] = fieldExample;\n        } else {\n          typeDefDict[fieldName] = [fieldType];\n        }\n      } else {\n        // lookup the name\n        var sub = false;\n\n        for (var j = 0; j < hints.length; j++) {\n          if (hints[j].type.toString() === fieldType.toString()) {\n            sub = hints[j];\n            break;\n          }\n        }\n\n        if (sub) {\n          const subResult = this.decodeTypeDefsRec(sub, hints);\n\n          if (arrayLen === -1) {\n            typeDefDict[fieldName] = subResult;\n          } else {\n            typeDefDict[fieldName] = [subResult];\n          }\n        } else {\n          console.log('error', 'Cannot find ' + fieldType + ' in decodeTypeDefs');\n        }\n      }\n    }\n\n    return typeDefDict;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Widget, {\n      name: \"Pub: \" + this.props.topic,\n      onRequestClose: this.props.onRequestClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Publisher\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 5,\n        overflowY: \"auto\",\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Message, {\n      auto: this.state.auto,\n      message: this.state.message,\n      messageDetails: this.props.details,\n      name: this.props.type,\n      updateState: state => this.setState(state),\n      values: this.state.values,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ButtonPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SmallButton ColorOne\",\n      onClick: this.publish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }, \"Publish\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SmallButton ColorTwo\",\n      onClick: this.toggleRepeat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, this.frequency[this.state.repeat].display)))));\n  }\n\n}\n\nexport default Publisher;","map":{"version":3,"sources":["/home/edison/react_projects/ros-app/src/components/ros-graph/Publisher.js"],"names":["React","ROSLIB","Message","Widget","Publisher","Component","state","auto","message","decodeTypeDefsRec","props","details","repeat","values","map","examples","intervalId","frequency","interval","display","publisher","Topic","ros","name","topic","messageType","type","componentWillUnmount","clearInterval","setState","publish","messageObj","time","Date","now","header","stamp","secs","nsecs","toggleRepeat","index","length","setInterval","theType","hints","typeDefDict","i","fieldnames","arrayLen","fieldarraylen","fieldName","fieldType","fieldtypes","fieldExample","indexOf","console","log","parseFloat","sub","j","toString","subResult","render","onRequestClose","flexDirection","flex","padding","overflowY"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react';\nimport ROSLIB from 'roslib';\nimport Message from '../components/ros-graph/Message'\nimport Widget from '../components/ros-graph/Widget';\n\ntype RosMessage = {\n  header?: {\n    stamp: {\n      secs: number,\n      nsecs: number,\n    }\n  }\n}\n\ntype Details = {\n  examples: Array<mixed>,\n  fieldarraylen: Array<number>,\n  fieldnames: Array<string>,\n  fieldtypes: Array<string>,\n  type: string,\n}\n\ntype Props = {\n  details: Array<Details>,\n  onRequestClose?: () => void,\n  ros: ROSLIB.Ros,\n  topic: string,\n  type: string,\n}\n\ntype State = {\n  auto: boolean,\n  message: RosMessage,\n  repeat: number,\n  values: Array<Array<mixed>>,\n}\n\nclass Publisher extends React.Component<Props, State> {\n  state = {\n    auto: false,\n    message: this.decodeTypeDefsRec(this.props.details[0], this.props.details),\n    repeat: 0,\n    values: this.props.details.map((message) => message.examples),\n  }\n\n  intervalId: ?IntervalID = null\n\n  frequency = [\n    {interval: 0, display: \"Single\"},\n    {interval: 10000, display: \"0.1 Hz\"},\n    {interval: 5000, display: \"0.5 Hz\"},\n    {interval: 1000, display: \"1 Hz\"},\n    {interval: 200, display: \"5 Hz\"},\n    {interval: 100, display: \"10 Hz\"}]\n\n  publisher = new ROSLIB.Topic({\n    ros : this.props.ros,\n    name : this.props.topic,\n    messageType : this.props.type,\n  })\n\n  // calls itself recursively to resolve type definition using hints.\n  decodeTypeDefsRec(theType: Details, hints: Array<Details>) {\n    var typeDefDict = {};\n    for (var i = 0; i < theType.fieldnames.length; i++) {\n      const arrayLen: number = theType.fieldarraylen[i];\n      const fieldName: string = theType.fieldnames[i];\n      const fieldType: string = theType.fieldtypes[i];\n      var fieldExample: any = theType.examples[i];\n      if (fieldType.indexOf('/') === -1) { // check the fieldType includes '/' or not\n        if (arrayLen === -1) {\n          if (fieldType === \"float64\") {\n            console.log(\"fieldExample\", fieldExample, parseFloat(fieldExample))\n            fieldExample = parseFloat(fieldExample);\n\n          }\n          typeDefDict[fieldName] = fieldExample;\n        }\n        else {\n          typeDefDict[fieldName] = [fieldType];\n        }\n      }\n      else {\n        // lookup the name\n        var sub = false;\n        for (var j = 0; j < hints.length; j++) {\n          if (hints[j].type.toString() === fieldType.toString()) {\n            sub = hints[j];\n            break;\n          }\n        }\n        if (sub) {\n          const subResult = this.decodeTypeDefsRec(sub, hints);\n          if (arrayLen === -1) {\n            typeDefDict[fieldName] = subResult;\n          }\n          else {\n            typeDefDict[fieldName] = [subResult];\n          }\n        }\n        else {\n          console.log('error', 'Cannot find ' + fieldType + ' in decodeTypeDefs');\n        }\n      }\n    }\n    return typeDefDict;\n  }\n\n  componentWillUnmount = () => {\n    if (this.state.repeat && this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n    this.setState({repeat: 0})\n  }\n\n  publish = () => {\n    if (!this.state.message) return\n    var messageObj: RosMessage = this.state.message;\n\n    if (this.state.auto) {\n      const time = Date.now()\n      if (messageObj.header) messageObj.header.stamp = {\n          secs: time / 1000,\n          nsecs: time % 1000,\n      }\n    }\n\n    const message = new ROSLIB.Message(messageObj);\n\n    this.publisher.publish(message);\n  }\n\n  toggleRepeat = () => {\n    const index = (this.state.repeat + 1) % this.frequency.length\n    if (this.intervalId) clearInterval(this.intervalId)\n\n    if (index !== 0) {\n      this.intervalId = setInterval(this.publish, this.frequency[index].interval); // publish at 1Hz\n    }\n\n    this.setState({\n      repeat: index,\n    })\n  }\n\n  render() {\n    return (\n      <Widget name={\"Pub: \" + this.props.topic} onRequestClose={this.props.onRequestClose}>\n        <div className=\"Publisher\">\n          <div style={{display: \"flex\", flexDirection: \"column\", flex: 1}}>\n            <div style={{padding: 5, overflowY: \"auto\", flex: 1}}>\n              <Message\n                auto={this.state.auto}\n                message={this.state.message}\n                messageDetails={this.props.details}\n                name={this.props.type}\n                updateState={(state) => this.setState(state)}\n                values={this.state.values}\n                />\n            </div>\n            <div className=\"ButtonPanel\">\n              <div className=\"SmallButton ColorOne\" onClick={this.publish}>\n                Publish\n              </div>\n              <div className=\"SmallButton ColorTwo\" onClick={this.toggleRepeat}>\n                {this.frequency[this.state.repeat].display}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Widget>\n    );\n  }\n}\n\nexport default Publisher;\n"]},"metadata":{},"sourceType":"module"}