{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/*\nCopyright (c) 2015 Twitter, Inc. and other contributors\n\nComponent to add Velocity animations around React transitions. Delegates to the React TransitionGroup\naddon.\n\nProperties\n  enter: Animation to run on a child component being added\n  leave: Animation to run on a child component leaving\n  runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n    component is mounted.\n  enterHideStyle/enterShowStyle: see below.\n\nAny additional properties (e.g. \"className\", \"component\") will be passed to the internal\nTransitionGroup.\n\n\"enter\" and \"leave\" should either be a string naming an animation, or a hash with an\n\"animation\" key that can either be a string itself, or a hash of style attributes to animate (this\nvalue is passed to Velocity its the first arg).\n\nIf \"enter\" or \"leave\" is a hash, it can additionally have a \"style\" value that is applied the tick\nbefore the Velocity animation starts. Use this for non-animating properties (like \"position\") that\nare prerequisites for correct animation. The style value is applied using Velocity's JS -> CSS\nroutines, which may differ from React's.\n\nAny hash entries beyond \"animation\" and \"style\" are passed in an options hash to Velocity. Use this\nfor options like \"stagger\", \"reverse\", &tc.\n\nBy default, this component will immediately hide all entering children with display: 'none', and\nunhide them one tick later with display: ''. This is done so that we can coalesce multiple enters\ninto a single animation, and we want to avoid any popping of elements in while they're collected. If\nyou prefer a different way of hiding these elements so that e.g. geometry can be immediately\ncalculated, use the enterHideStyle and enterShowStyle props to provide alternate style hashes for\nhiding and revealing entering elements.\n\nStatics\n  disabledForTest: Set this to true globally to turn off all custom animation logic. Instead, this\n    component will behave like a vanilla TransitionGroup.\n\nInspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n*/\n\n/* eslint react/no-find-dom-node: 0 */\n\n\nvar _ = {\n  each: require('lodash/each'),\n  extend: require('lodash/extend'),\n  forEach: require('lodash/forEach'),\n  isEqual: require('lodash/isEqual'),\n  keys: require('lodash/keys'),\n  omit: require('lodash/omit'),\n  map: require('lodash/map')\n};\n\nvar React = require('react');\n\nvar ReactDOM = require('react-dom');\n\nvar PropTypes = require('prop-types');\n\nvar TransitionGroup = require('react-transition-group/TransitionGroup');\n\nvar Transition = require('react-transition-group/Transition').default;\n\nvar Velocity = require('./lib/velocity-animate-shim'); // Shim requestAnimationFrame for browsers that don't support it, in particular IE 9.\n\n\nvar shimRequestAnimationFrame = typeof window !== 'undefined' && (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {\n  window.setTimeout(callback, 0);\n}); // Fix 'Invalid calling object' error in IE\n\n\nshimRequestAnimationFrame = typeof window !== 'undefined' && shimRequestAnimationFrame.bind(window);\n\nvar shimCancelAnimationFrame = typeof window !== 'undefined' && (window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || function (timeout) {\n  window.clearTimeout(timeout);\n});\n\nshimCancelAnimationFrame = typeof window !== 'undefined' && shimCancelAnimationFrame.bind(window); // Internal wrapper for the transitioned elements. Delegates all child lifecycle events to the\n// parent VelocityTransitionGroup so that it can co-ordinate animating all of the elements at once.\n\nvar VelocityTransitionGroupChild = function (_React$Component) {\n  _inherits(VelocityTransitionGroupChild, _React$Component);\n\n  function VelocityTransitionGroupChild() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, VelocityTransitionGroupChild);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = VelocityTransitionGroupChild.__proto__ || Object.getPrototypeOf(VelocityTransitionGroupChild)).call.apply(_ref, [this].concat(args))), _this), _this.lastState = 'appear', _this.componentWillEnter = function (node, appearing) {\n      _this.lastState = appearing ? 'appear' : 'enter';\n    }, _this.componentWillExit = function () {\n      _this.lastState = 'exit';\n    }, _this.endListener = function (node, done) {\n      switch (_this.lastState) {\n        case 'appear':\n          _this.props.willAppearFunc(node, done);\n\n          break;\n\n        case 'enter':\n          _this.props.willEnterFunc(node, done);\n\n          break;\n\n        case 'exit':\n          _this.props.willLeaveFunc(node, done);\n\n          break;\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  } // We trigger our transitions out of endListener because that gives us access to the done callback\n  // we can use to tell the Transition that the animation has completed.\n\n\n  _createClass(VelocityTransitionGroupChild, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      // Clear references from velocity cache.\n      Velocity.Utilities.removeData(ReactDOM.findDOMNode(this), ['velocity', 'fxqueue']);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var transitionProps = _.omit(this.props, _.keys(VelocityTransitionGroupChild.propTypes));\n\n      return React.createElement(Transition, _extends({}, transitionProps, {\n        timeout: null,\n        addEndListener: this.endListener,\n        appear: true,\n        onEnter: this.componentWillEnter,\n        onExit: this.componentWillExit\n      }), this.props.children);\n    }\n  }]);\n\n  return VelocityTransitionGroupChild;\n}(React.Component);\n\nVelocityTransitionGroupChild.propTypes = {\n  children: PropTypes.element.isRequired,\n  willAppearFunc: PropTypes.func.isRequired,\n  willEnterFunc: PropTypes.func.isRequired,\n  willLeaveFunc: PropTypes.func.isRequired\n};\n\nvar VelocityTransitionGroup = function (_React$Component2) {\n  _inherits(VelocityTransitionGroup, _React$Component2);\n\n  function VelocityTransitionGroup(props) {\n    _classCallCheck(this, VelocityTransitionGroup);\n\n    var _this2 = _possibleConstructorReturn(this, (VelocityTransitionGroup.__proto__ || Object.getPrototypeOf(VelocityTransitionGroup)).call(this, props));\n\n    _this2._scheduledAnimationFrame = null;\n    _this2._scheduledAnimationRunFrames = [];\n    _this2._entering = [];\n    _this2._leaving = [];\n    _this2._timers = [];\n    _this2._unmounted = false;\n    _this2.childWillAppear = _this2.childWillAppear.bind(_this2);\n    _this2.childWillEnter = _this2.childWillEnter.bind(_this2);\n    _this2.childWillLeave = _this2.childWillLeave.bind(_this2);\n    _this2._runAnimations = _this2._runAnimations.bind(_this2);\n    _this2._wrapChild = _this2._wrapChild.bind(_this2);\n    return _this2;\n  }\n\n  _createClass(VelocityTransitionGroup, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._scheduledAnimationFrame) {\n        shimCancelAnimationFrame(this._scheduledAnimationFrame);\n      }\n\n      _.forEach(this._timers, function (timer) {\n        clearTimeout(timer);\n      });\n\n      _.forEach(this._scheduledAnimationRunFrames, function (frame) {\n        shimCancelAnimationFrame(frame);\n      }); // We don't cancel all the in-process animations, so we use this to know if the component\n      // is gone when an animation is over.\n\n\n      this._unmounted = true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      // Pass any props that are not our own on into the TransitionGroup delegate.\n      var transitionGroupProps = _.omit(this.props, _.keys(VelocityTransitionGroup.propTypes));\n\n      return React.createElement(TransitionGroup, transitionGroupProps, !this.constructor.disabledForTest && !Velocity.velocityReactServerShim ? React.Children.map(this.props.children, this._wrapChild) : React.Children.map(this.props.children, // Wrapping in a no-op Transition to consume the props that\n      // TransitionGroup gives its children. Fixes react-dom warnings\n      // in test for those props appearing on divs and such.\n      function (child) {\n        return child && React.createElement(Transition, {\n          timeout: 0\n        }, child);\n      }));\n    }\n  }, {\n    key: 'childWillAppear',\n    value: function childWillAppear(node, doneFn) {\n      var _this3 = this;\n\n      if (this.props.runOnMount) {\n        this.childWillEnter(node, doneFn);\n      } else {\n        this._finishAnimation(node, this.props.enter); // Important to tick over so that any callbacks due to finishing the animation complete first.\n        //\n        // Using setTimeout so that doneFn gets called even when the tab is hidden.\n\n\n        var t = setTimeout(function () {\n          var idx = _this3._timers.indexOf(t);\n\n          if (idx >= 0) {\n            _this3._timers.splice(idx, 1);\n          }\n\n          doneFn();\n        }, 0);\n\n        this._timers.push(t);\n      }\n    }\n  }, {\n    key: 'childWillEnter',\n    value: function childWillEnter(node, doneFn) {\n      if (this._shortCircuitAnimation(this.props.enter, doneFn)) return; // By finishing a \"leave\" on the element, we put it in the right state to be animated in. Useful\n      // if \"leave\" includes a rotation or something that we'd like to have as our starting point, for\n      // symmetry.\n      // We use overrideOpts to prevent any \"begin\" or \"complete\" callback from triggering in this case, since\n      // it doesn't make a ton of sense.\n\n      this._finishAnimation(node, this.props.leave, {\n        begin: undefined,\n        complete: undefined\n      }); // We're not going to start the animation for a tick, so set the node's display to none (or any\n      // custom \"hide\" style provided) so that it doesn't flash in.\n\n\n      _.forEach(this.props.enterHideStyle, function (val, key) {\n        Velocity.CSS.setPropertyValue(node, key, val);\n      });\n\n      this._entering.push({\n        node: node,\n        doneFn: doneFn\n      });\n\n      this._schedule();\n    }\n  }, {\n    key: 'childWillLeave',\n    value: function childWillLeave(node, doneFn) {\n      if (this._shortCircuitAnimation(this.props.leave, doneFn)) return;\n\n      this._leaving.push({\n        node: node,\n        doneFn: doneFn\n      });\n\n      this._schedule();\n    } // document.hidden check is there because animation completion callbacks won't fire (due to\n    // chaining off of rAF), which would prevent entering / leaving DOM nodes from being cleaned up\n    // while the tab is hidden.\n    //\n    // Returns true if this did short circuit, false if lifecycle methods should continue with\n    // their animations.\n\n  }, {\n    key: '_shortCircuitAnimation',\n    value: function _shortCircuitAnimation(animationProp, doneFn) {\n      if (document.hidden || this._parseAnimationProp(animationProp).animation == null) {\n        doneFn();\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: '_schedule',\n    value: function _schedule() {\n      if (this._scheduledAnimationFrame) {\n        return;\n      } // Need rAF to make sure we're in the same event queue as Velocity from here out. Important\n      // for avoiding getting wrong interleaving with Velocity callbacks.\n\n\n      this._scheduledAnimationFrame = shimRequestAnimationFrame(this._runAnimations);\n    } // arrow function because this is used as an rAF callback\n\n  }, {\n    key: '_runAnimations',\n    value: function _runAnimations() {\n      this._scheduledAnimationFrame = null;\n\n      this._runAnimation(true, this._entering, this.props.enter);\n\n      this._runAnimation(false, this._leaving, this.props.leave);\n\n      this._entering = [];\n      this._leaving = [];\n    } // Used to parse out the 'enter' and 'leave' properties. Handles cases where they are omitted\n    // as well as when they are just strings and not hashes of animation and options.\n\n  }, {\n    key: '_parseAnimationProp',\n    value: function _parseAnimationProp(animationProp) {\n      var animation, opts, style;\n\n      if (typeof animationProp === 'string') {\n        animation = animationProp;\n        style = null;\n        opts = {};\n      } else {\n        animation = animationProp != null ? animationProp.animation : null;\n        style = animationProp != null ? animationProp.style : null;\n        opts = _.omit(animationProp, 'animation', 'style');\n      }\n\n      return {\n        animation: animation,\n        style: style,\n        opts: opts\n      };\n    }\n  }, {\n    key: '_runAnimation',\n    value: function _runAnimation(entering, queue, animationProp) {\n      var _this4 = this;\n\n      if (queue.length === 0) {\n        return;\n      }\n\n      var nodes = _.map(queue, 'node');\n\n      var doneFns = _.map(queue, 'doneFn');\n\n      var parsedAnimation = this._parseAnimationProp(animationProp);\n\n      var animation = parsedAnimation.animation;\n      var style = parsedAnimation.style;\n      var opts = parsedAnimation.opts; // Clearing display reverses the behavior from childWillAppear where all elements are added with\n      // display: none to prevent them from flashing in before the animation starts. We don't do this\n      // for the fade/slide animations or any animation that ends in \"In,\" since Velocity will handle\n      // it for us.\n      //\n      // If a custom \"enterShowStyle\" prop is passed, (i.e. not one that just reverses display: none)\n      // we always run it, regardless of the animation, since it's probably doing something around\n      // opacity or positioning that Velocity will not necessarily reset.\n\n      if (entering) {\n        if (!_.isEqual(this.props.enterShowStyle, {\n          display: ''\n        }) || !(/^(fade|slide)/.test(animation) || /In$/.test(animation))) {\n          style = _.extend({}, this.props.enterShowStyle, style);\n        }\n      } // Because Safari can synchronously repaint when CSS \"display\" is reset, we set styles for all\n      // browsers before the rAF tick below that starts the animation. This way you know in all\n      // cases that you need to support your static styles being visible on the element before\n      // the animation begins.\n\n\n      if (style != null) {\n        _.each(style, function (value, key) {\n          Velocity.hook(nodes, key, value);\n        });\n      }\n\n      var doneFn = function doneFn() {\n        // calling doneFns after the parent has unmounted leads to errors\n        if (_this4._unmounted) {\n          return;\n        }\n\n        doneFns.map(function (doneFn) {\n          doneFn();\n        });\n      }; // For nodes that are entering, we tell the TransitionGroup that we're done with them\n      // immediately. That way, they can be removed later before their entering animations complete.\n      // If we're leaving, we stop current animations (which may be partially-completed enter\n      // animations) so that we can then animate out. Velocity typically makes these transitions\n      // very smooth, correctly animating from whatever state the element is currently in.\n\n\n      if (entering) {\n        doneFn();\n        doneFn = null;\n      } else {\n        Velocity(nodes, 'stop');\n      }\n\n      var combinedCompleteFn;\n\n      if (doneFn && opts.complete) {\n        var optsCompleteFn = opts.complete;\n\n        combinedCompleteFn = function combinedCompleteFn() {\n          doneFn(); // preserve this / args from Velocity so the complete function has context for what completed\n\n          optsCompleteFn.apply(this, arguments);\n        };\n      } else {\n        // One or the other or neither.\n        combinedCompleteFn = doneFn || opts.complete;\n      } // Bit of a hack. Without this rAF, sometimes an enter animation doesn't start running, or is\n      // stopped before getting anywhere. This should get us on the other side of both completeFn and\n      // any _finishAnimation that's happening.\n\n\n      var t = shimRequestAnimationFrame(function () {\n        var idx = _this4._scheduledAnimationRunFrames.indexOf(t);\n\n        if (idx >= 0) {\n          _this4._scheduledAnimationRunFrames.splice(idx, 1);\n        }\n\n        Velocity(nodes, animation, _.extend({}, opts, {\n          complete: combinedCompleteFn\n        }));\n      });\n\n      this._scheduledAnimationRunFrames.push(t);\n    }\n  }, {\n    key: '_finishAnimation',\n    value: function _finishAnimation(node, animationProp, overrideOpts) {\n      var parsedAnimation = this._parseAnimationProp(animationProp);\n\n      var animation = parsedAnimation.animation;\n      var style = parsedAnimation.style;\n\n      var opts = _.extend({}, parsedAnimation.opts, overrideOpts);\n\n      if (style != null) {\n        _.each(style, function (value, key) {\n          Velocity.hook(node, key, value);\n        });\n      }\n\n      if (animation != null) {\n        // Opts are relevant even though we're immediately finishing, since things like \"display\"\n        // can affect the animation outcome.\n        Velocity(node, animation, opts);\n        Velocity(node, 'finishAll', true);\n      }\n    }\n  }, {\n    key: '_wrapChild',\n    value: function _wrapChild(child) {\n      // Need to guard against falsey children, which React will sometimes pass\n      // in.\n      if (!child) {\n        return null;\n      }\n\n      return React.createElement(VelocityTransitionGroupChild, {\n        key: child.key,\n        willAppearFunc: this.childWillAppear,\n        willEnterFunc: this.childWillEnter,\n        willLeaveFunc: this.childWillLeave\n      }, child);\n    }\n  }]);\n\n  return VelocityTransitionGroup;\n}(React.Component);\n\nVelocityTransitionGroup.disabledForTest = false; // global, mutable, for disabling animations during test\n\nVelocityTransitionGroup.propTypes = {\n  runOnMount: PropTypes.bool,\n  enter: PropTypes.any,\n  leave: PropTypes.any,\n  children: PropTypes.any,\n  enterHideStyle: PropTypes.object,\n  enterShowStyle: PropTypes.object\n};\nVelocityTransitionGroup.defaultProps = {\n  runOnMount: false,\n  enter: null,\n  leave: null,\n  enterHideStyle: {\n    display: 'none'\n  },\n  enterShowStyle: {\n    display: ''\n  }\n};\nmodule.exports = VelocityTransitionGroup;","map":{"version":3,"sources":["/home/edison/react_projects/ros-app/node_modules/velocity-react/velocity-transition-group.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","_","each","require","extend","forEach","isEqual","keys","omit","map","React","ReactDOM","PropTypes","TransitionGroup","Transition","default","Velocity","shimRequestAnimationFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","bind","shimCancelAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","timeout","clearTimeout","VelocityTransitionGroupChild","_React$Component","_ref","_temp","_this","_ret","_len","args","Array","_key","getPrototypeOf","apply","concat","lastState","componentWillEnter","node","appearing","componentWillExit","endListener","done","willAppearFunc","willEnterFunc","willLeaveFunc","componentWillUnmount","Utilities","removeData","findDOMNode","render","transitionProps","propTypes","createElement","addEndListener","appear","onEnter","onExit","children","Component","element","isRequired","func","VelocityTransitionGroup","_React$Component2","_this2","_scheduledAnimationFrame","_scheduledAnimationRunFrames","_entering","_leaving","_timers","_unmounted","childWillAppear","childWillEnter","childWillLeave","_runAnimations","_wrapChild","timer","frame","transitionGroupProps","disabledForTest","velocityReactServerShim","Children","child","doneFn","_this3","runOnMount","_finishAnimation","enter","t","idx","indexOf","splice","push","_shortCircuitAnimation","leave","begin","undefined","complete","enterHideStyle","val","CSS","setPropertyValue","_schedule","animationProp","document","hidden","_parseAnimationProp","animation","_runAnimation","opts","style","entering","queue","_this4","nodes","doneFns","parsedAnimation","enterShowStyle","display","test","hook","combinedCompleteFn","optsCompleteFn","overrideOpts","bool","any","object","defaultProps","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/*\nCopyright (c) 2015 Twitter, Inc. and other contributors\n\nComponent to add Velocity animations around React transitions. Delegates to the React TransitionGroup\naddon.\n\nProperties\n  enter: Animation to run on a child component being added\n  leave: Animation to run on a child component leaving\n  runOnMount: if true, runs the \"enter\" animation on the elements that exist as children when this\n    component is mounted.\n  enterHideStyle/enterShowStyle: see below.\n\nAny additional properties (e.g. \"className\", \"component\") will be passed to the internal\nTransitionGroup.\n\n\"enter\" and \"leave\" should either be a string naming an animation, or a hash with an\n\"animation\" key that can either be a string itself, or a hash of style attributes to animate (this\nvalue is passed to Velocity its the first arg).\n\nIf \"enter\" or \"leave\" is a hash, it can additionally have a \"style\" value that is applied the tick\nbefore the Velocity animation starts. Use this for non-animating properties (like \"position\") that\nare prerequisites for correct animation. The style value is applied using Velocity's JS -> CSS\nroutines, which may differ from React's.\n\nAny hash entries beyond \"animation\" and \"style\" are passed in an options hash to Velocity. Use this\nfor options like \"stagger\", \"reverse\", &tc.\n\nBy default, this component will immediately hide all entering children with display: 'none', and\nunhide them one tick later with display: ''. This is done so that we can coalesce multiple enters\ninto a single animation, and we want to avoid any popping of elements in while they're collected. If\nyou prefer a different way of hiding these elements so that e.g. geometry can be immediately\ncalculated, use the enterHideStyle and enterShowStyle props to provide alternate style hashes for\nhiding and revealing entering elements.\n\nStatics\n  disabledForTest: Set this to true globally to turn off all custom animation logic. Instead, this\n    component will behave like a vanilla TransitionGroup.\n\nInspired by https://gist.github.com/tkafka/0d94c6ec94297bb67091\n*/\n/* eslint react/no-find-dom-node: 0 */\n\nvar _ = {\n  each: require('lodash/each'),\n  extend: require('lodash/extend'),\n  forEach: require('lodash/forEach'),\n  isEqual: require('lodash/isEqual'),\n  keys: require('lodash/keys'),\n  omit: require('lodash/omit'),\n  map: require('lodash/map')\n};\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar PropTypes = require('prop-types');\nvar TransitionGroup = require('react-transition-group/TransitionGroup');\nvar Transition = require('react-transition-group/Transition').default;\nvar Velocity = require('./lib/velocity-animate-shim');\n\n// Shim requestAnimationFrame for browsers that don't support it, in particular IE 9.\nvar shimRequestAnimationFrame = typeof window !== 'undefined' && (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {\n  window.setTimeout(callback, 0);\n});\n\n// Fix 'Invalid calling object' error in IE\nshimRequestAnimationFrame = typeof window !== 'undefined' && shimRequestAnimationFrame.bind(window);\n\nvar shimCancelAnimationFrame = typeof window !== 'undefined' && (window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || function (timeout) {\n  window.clearTimeout(timeout);\n});\n\nshimCancelAnimationFrame = typeof window !== 'undefined' && shimCancelAnimationFrame.bind(window);\n\n// Internal wrapper for the transitioned elements. Delegates all child lifecycle events to the\n// parent VelocityTransitionGroup so that it can co-ordinate animating all of the elements at once.\n\nvar VelocityTransitionGroupChild = function (_React$Component) {\n  _inherits(VelocityTransitionGroupChild, _React$Component);\n\n  function VelocityTransitionGroupChild() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, VelocityTransitionGroupChild);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = VelocityTransitionGroupChild.__proto__ || Object.getPrototypeOf(VelocityTransitionGroupChild)).call.apply(_ref, [this].concat(args))), _this), _this.lastState = 'appear', _this.componentWillEnter = function (node, appearing) {\n      _this.lastState = appearing ? 'appear' : 'enter';\n    }, _this.componentWillExit = function () {\n      _this.lastState = 'exit';\n    }, _this.endListener = function (node, done) {\n      switch (_this.lastState) {\n        case 'appear':\n          _this.props.willAppearFunc(node, done);\n          break;\n        case 'enter':\n          _this.props.willEnterFunc(node, done);\n          break;\n        case 'exit':\n          _this.props.willLeaveFunc(node, done);\n          break;\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  // We trigger our transitions out of endListener because that gives us access to the done callback\n  // we can use to tell the Transition that the animation has completed.\n\n\n  _createClass(VelocityTransitionGroupChild, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      // Clear references from velocity cache.\n      Velocity.Utilities.removeData(ReactDOM.findDOMNode(this), ['velocity', 'fxqueue']);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var transitionProps = _.omit(this.props, _.keys(VelocityTransitionGroupChild.propTypes));\n\n      return React.createElement(Transition, _extends({}, transitionProps, {\n        timeout: null,\n        addEndListener: this.endListener,\n        appear: true,\n        onEnter: this.componentWillEnter,\n        onExit: this.componentWillExit\n      }), this.props.children);\n    }\n  }]);\n\n  return VelocityTransitionGroupChild;\n}(React.Component);\n\nVelocityTransitionGroupChild.propTypes = {\n  children: PropTypes.element.isRequired,\n  willAppearFunc: PropTypes.func.isRequired,\n  willEnterFunc: PropTypes.func.isRequired,\n  willLeaveFunc: PropTypes.func.isRequired\n};\n\nvar VelocityTransitionGroup = function (_React$Component2) {\n  _inherits(VelocityTransitionGroup, _React$Component2);\n\n  function VelocityTransitionGroup(props) {\n    _classCallCheck(this, VelocityTransitionGroup);\n\n    var _this2 = _possibleConstructorReturn(this, (VelocityTransitionGroup.__proto__ || Object.getPrototypeOf(VelocityTransitionGroup)).call(this, props));\n\n    _this2._scheduledAnimationFrame = null;\n    _this2._scheduledAnimationRunFrames = [];\n    _this2._entering = [];\n    _this2._leaving = [];\n\n    _this2._timers = [];\n    _this2._unmounted = false;\n\n    _this2.childWillAppear = _this2.childWillAppear.bind(_this2);\n    _this2.childWillEnter = _this2.childWillEnter.bind(_this2);\n    _this2.childWillLeave = _this2.childWillLeave.bind(_this2);\n\n    _this2._runAnimations = _this2._runAnimations.bind(_this2);\n    _this2._wrapChild = _this2._wrapChild.bind(_this2);\n    return _this2;\n  }\n\n  _createClass(VelocityTransitionGroup, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._scheduledAnimationFrame) {\n        shimCancelAnimationFrame(this._scheduledAnimationFrame);\n      }\n\n      _.forEach(this._timers, function (timer) {\n        clearTimeout(timer);\n      });\n\n      _.forEach(this._scheduledAnimationRunFrames, function (frame) {\n        shimCancelAnimationFrame(frame);\n      });\n\n      // We don't cancel all the in-process animations, so we use this to know if the component\n      // is gone when an animation is over.\n      this._unmounted = true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      // Pass any props that are not our own on into the TransitionGroup delegate.\n      var transitionGroupProps = _.omit(this.props, _.keys(VelocityTransitionGroup.propTypes));\n\n      return React.createElement(TransitionGroup, transitionGroupProps, !this.constructor.disabledForTest && !Velocity.velocityReactServerShim ? React.Children.map(this.props.children, this._wrapChild) : React.Children.map(this.props.children,\n      // Wrapping in a no-op Transition to consume the props that\n      // TransitionGroup gives its children. Fixes react-dom warnings\n      // in test for those props appearing on divs and such.\n      function (child) {\n        return child && React.createElement(Transition, { timeout: 0 }, child);\n      }));\n    }\n  }, {\n    key: 'childWillAppear',\n    value: function childWillAppear(node, doneFn) {\n      var _this3 = this;\n\n      if (this.props.runOnMount) {\n        this.childWillEnter(node, doneFn);\n      } else {\n        this._finishAnimation(node, this.props.enter);\n\n        // Important to tick over so that any callbacks due to finishing the animation complete first.\n        //\n        // Using setTimeout so that doneFn gets called even when the tab is hidden.\n        var t = setTimeout(function () {\n          var idx = _this3._timers.indexOf(t);\n          if (idx >= 0) {\n            _this3._timers.splice(idx, 1);\n          }\n\n          doneFn();\n        }, 0);\n        this._timers.push(t);\n      }\n    }\n  }, {\n    key: 'childWillEnter',\n    value: function childWillEnter(node, doneFn) {\n      if (this._shortCircuitAnimation(this.props.enter, doneFn)) return;\n\n      // By finishing a \"leave\" on the element, we put it in the right state to be animated in. Useful\n      // if \"leave\" includes a rotation or something that we'd like to have as our starting point, for\n      // symmetry.\n      // We use overrideOpts to prevent any \"begin\" or \"complete\" callback from triggering in this case, since\n      // it doesn't make a ton of sense.\n      this._finishAnimation(node, this.props.leave, {\n        begin: undefined,\n        complete: undefined\n      });\n\n      // We're not going to start the animation for a tick, so set the node's display to none (or any\n      // custom \"hide\" style provided) so that it doesn't flash in.\n      _.forEach(this.props.enterHideStyle, function (val, key) {\n        Velocity.CSS.setPropertyValue(node, key, val);\n      });\n\n      this._entering.push({\n        node: node,\n        doneFn: doneFn\n      });\n\n      this._schedule();\n    }\n  }, {\n    key: 'childWillLeave',\n    value: function childWillLeave(node, doneFn) {\n      if (this._shortCircuitAnimation(this.props.leave, doneFn)) return;\n\n      this._leaving.push({\n        node: node,\n        doneFn: doneFn\n      });\n\n      this._schedule();\n    }\n\n    // document.hidden check is there because animation completion callbacks won't fire (due to\n    // chaining off of rAF), which would prevent entering / leaving DOM nodes from being cleaned up\n    // while the tab is hidden.\n    //\n    // Returns true if this did short circuit, false if lifecycle methods should continue with\n    // their animations.\n\n  }, {\n    key: '_shortCircuitAnimation',\n    value: function _shortCircuitAnimation(animationProp, doneFn) {\n      if (document.hidden || this._parseAnimationProp(animationProp).animation == null) {\n        doneFn();\n\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: '_schedule',\n    value: function _schedule() {\n      if (this._scheduledAnimationFrame) {\n        return;\n      }\n\n      // Need rAF to make sure we're in the same event queue as Velocity from here out. Important\n      // for avoiding getting wrong interleaving with Velocity callbacks.\n      this._scheduledAnimationFrame = shimRequestAnimationFrame(this._runAnimations);\n    }\n\n    // arrow function because this is used as an rAF callback\n\n  }, {\n    key: '_runAnimations',\n    value: function _runAnimations() {\n      this._scheduledAnimationFrame = null;\n\n      this._runAnimation(true, this._entering, this.props.enter);\n      this._runAnimation(false, this._leaving, this.props.leave);\n\n      this._entering = [];\n      this._leaving = [];\n    }\n\n    // Used to parse out the 'enter' and 'leave' properties. Handles cases where they are omitted\n    // as well as when they are just strings and not hashes of animation and options.\n\n  }, {\n    key: '_parseAnimationProp',\n    value: function _parseAnimationProp(animationProp) {\n      var animation, opts, style;\n\n      if (typeof animationProp === 'string') {\n        animation = animationProp;\n        style = null;\n        opts = {};\n      } else {\n        animation = animationProp != null ? animationProp.animation : null;\n        style = animationProp != null ? animationProp.style : null;\n        opts = _.omit(animationProp, 'animation', 'style');\n      }\n\n      return {\n        animation: animation,\n        style: style,\n        opts: opts\n      };\n    }\n  }, {\n    key: '_runAnimation',\n    value: function _runAnimation(entering, queue, animationProp) {\n      var _this4 = this;\n\n      if (queue.length === 0) {\n        return;\n      }\n\n      var nodes = _.map(queue, 'node');\n      var doneFns = _.map(queue, 'doneFn');\n\n      var parsedAnimation = this._parseAnimationProp(animationProp);\n      var animation = parsedAnimation.animation;\n      var style = parsedAnimation.style;\n      var opts = parsedAnimation.opts;\n\n      // Clearing display reverses the behavior from childWillAppear where all elements are added with\n      // display: none to prevent them from flashing in before the animation starts. We don't do this\n      // for the fade/slide animations or any animation that ends in \"In,\" since Velocity will handle\n      // it for us.\n      //\n      // If a custom \"enterShowStyle\" prop is passed, (i.e. not one that just reverses display: none)\n      // we always run it, regardless of the animation, since it's probably doing something around\n      // opacity or positioning that Velocity will not necessarily reset.\n      if (entering) {\n        if (!_.isEqual(this.props.enterShowStyle, { display: '' }) || !(/^(fade|slide)/.test(animation) || /In$/.test(animation))) {\n          style = _.extend({}, this.props.enterShowStyle, style);\n        }\n      }\n\n      // Because Safari can synchronously repaint when CSS \"display\" is reset, we set styles for all\n      // browsers before the rAF tick below that starts the animation. This way you know in all\n      // cases that you need to support your static styles being visible on the element before\n      // the animation begins.\n      if (style != null) {\n        _.each(style, function (value, key) {\n          Velocity.hook(nodes, key, value);\n        });\n      }\n\n      var doneFn = function doneFn() {\n        // calling doneFns after the parent has unmounted leads to errors\n        if (_this4._unmounted) {\n          return;\n        }\n\n        doneFns.map(function (doneFn) {\n          doneFn();\n        });\n      };\n\n      // For nodes that are entering, we tell the TransitionGroup that we're done with them\n      // immediately. That way, they can be removed later before their entering animations complete.\n      // If we're leaving, we stop current animations (which may be partially-completed enter\n      // animations) so that we can then animate out. Velocity typically makes these transitions\n      // very smooth, correctly animating from whatever state the element is currently in.\n      if (entering) {\n        doneFn();\n        doneFn = null;\n      } else {\n        Velocity(nodes, 'stop');\n      }\n\n      var combinedCompleteFn;\n      if (doneFn && opts.complete) {\n        var optsCompleteFn = opts.complete;\n        combinedCompleteFn = function combinedCompleteFn() {\n          doneFn();\n          // preserve this / args from Velocity so the complete function has context for what completed\n          optsCompleteFn.apply(this, arguments);\n        };\n      } else {\n        // One or the other or neither.\n        combinedCompleteFn = doneFn || opts.complete;\n      }\n\n      // Bit of a hack. Without this rAF, sometimes an enter animation doesn't start running, or is\n      // stopped before getting anywhere. This should get us on the other side of both completeFn and\n      // any _finishAnimation that's happening.\n      var t = shimRequestAnimationFrame(function () {\n        var idx = _this4._scheduledAnimationRunFrames.indexOf(t);\n        if (idx >= 0) {\n          _this4._scheduledAnimationRunFrames.splice(idx, 1);\n        }\n\n        Velocity(nodes, animation, _.extend({}, opts, {\n          complete: combinedCompleteFn\n        }));\n      });\n\n      this._scheduledAnimationRunFrames.push(t);\n    }\n  }, {\n    key: '_finishAnimation',\n    value: function _finishAnimation(node, animationProp, overrideOpts) {\n      var parsedAnimation = this._parseAnimationProp(animationProp);\n      var animation = parsedAnimation.animation;\n      var style = parsedAnimation.style;\n      var opts = _.extend({}, parsedAnimation.opts, overrideOpts);\n\n      if (style != null) {\n        _.each(style, function (value, key) {\n          Velocity.hook(node, key, value);\n        });\n      }\n\n      if (animation != null) {\n        // Opts are relevant even though we're immediately finishing, since things like \"display\"\n        // can affect the animation outcome.\n\n        Velocity(node, animation, opts);\n        Velocity(node, 'finishAll', true);\n      }\n    }\n  }, {\n    key: '_wrapChild',\n    value: function _wrapChild(child) {\n      // Need to guard against falsey children, which React will sometimes pass\n      // in.\n      if (!child) {\n        return null;\n      }\n\n      return React.createElement(VelocityTransitionGroupChild, {\n        key: child.key,\n        willAppearFunc: this.childWillAppear,\n        willEnterFunc: this.childWillEnter,\n        willLeaveFunc: this.childWillLeave\n      }, child);\n    }\n  }]);\n\n  return VelocityTransitionGroup;\n}(React.Component);\n\nVelocityTransitionGroup.disabledForTest = false; // global, mutable, for disabling animations during test\n\nVelocityTransitionGroup.propTypes = {\n  runOnMount: PropTypes.bool,\n  enter: PropTypes.any,\n  leave: PropTypes.any,\n  children: PropTypes.any,\n  enterHideStyle: PropTypes.object,\n  enterShowStyle: PropTypes.object\n};\n\nVelocityTransitionGroup.defaultProps = {\n  runOnMount: false,\n  enter: null,\n  leave: null,\n  enterHideStyle: {\n    display: 'none'\n  },\n  enterShowStyle: {\n    display: ''\n  }\n};\n\nmodule.exports = VelocityTransitionGroup;"]},"metadata":{},"sourceType":"script"}